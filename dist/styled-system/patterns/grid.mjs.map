{"version":3,"file":"grid.mjs","sources":["../../../styled-system/patterns/grid.mjs"],"sourcesContent":["import { getPatternStyles, patternFns } from '../helpers.mjs';\nimport { css } from '../css/index.mjs';\n\nconst gridConfig = {\ntransform(props, { map, isCssUnit }) {\n  const { columnGap, rowGap, gap, columns, minChildWidth, ...rest } = props;\n  const getValue = (v) => isCssUnit(v) ? v : `token(sizes.${v}, ${v})`;\n  return {\n    display: \"grid\",\n    gridTemplateColumns: columns != null ? map(columns, (v) => `repeat(${v}, minmax(0, 1fr))`) : minChildWidth != null ? map(minChildWidth, (v) => `repeat(auto-fit, minmax(${getValue(v)}, 1fr))`) : void 0,\n    gap,\n    columnGap,\n    rowGap,\n    ...rest\n  };\n},\ndefaultValues(props) {\n  return { gap: props.columnGap || props.rowGap ? void 0 : \"10px\" };\n}}\n\nexport const getGridStyle = (styles = {}) => {\n  const _styles = getPatternStyles(gridConfig, styles)\n  return gridConfig.transform(_styles, patternFns)\n}\n\nexport const grid = (styles) => css(getGridStyle(styles))\ngrid.raw = getGridStyle"],"names":["gridConfig","props","map","isCssUnit","columnGap","rowGap","gap","columns","minChildWidth","rest","getValue","v","getGridStyle","styles","_styles","getPatternStyles","patternFns","grid","css"],"mappings":";;AAGA,MAAMA,IAAa;AAAA,EACnB,UAAUC,GAAO,EAAE,KAAAC,GAAK,WAAAC,KAAa;AACnC,UAAM,EAAE,WAAAC,GAAW,QAAAC,GAAQ,KAAAC,GAAK,SAAAC,GAAS,eAAAC,GAAe,GAAGC,EAAM,IAAGR,GAC9DS,IAAW,CAACC,MAAMR,EAAUQ,CAAC,IAAIA,IAAI,eAAeA,CAAC,KAAKA,CAAC;AACjE,WAAO;AAAA,MACL,SAAS;AAAA,MACT,qBAAqBJ,KAAW,OAAOL,EAAIK,GAAS,CAACI,MAAM,UAAUA,CAAC,mBAAmB,IAAIH,KAAiB,OAAON,EAAIM,GAAe,CAACG,MAAM,2BAA2BD,EAASC,CAAC,CAAC,SAAS,IAAI;AAAA,MAClM,KAAAL;AAAA,MACA,WAAAF;AAAA,MACA,QAAAC;AAAA,MACA,GAAGI;AAAA,IACP;AAAA,EACA;AAAA,EACA,cAAcR,GAAO;AACnB,WAAO,EAAE,KAAKA,EAAM,aAAaA,EAAM,SAAS,SAAS;EAC3D;AAAC,GAEYW,IAAe,CAACC,IAAS,OAAO;AAC3C,QAAMC,IAAUC,EAAiBf,GAAYa,CAAM;AACnD,SAAOb,EAAW,UAAUc,GAASE,CAAU;AACjD,GAEaC,IAAO,CAACJ,MAAWK,EAAIN,EAAaC,CAAM,CAAC;AACxDI,EAAK,MAAML;"}