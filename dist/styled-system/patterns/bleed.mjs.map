{"version":3,"file":"bleed.mjs","sources":["../../../src/styled-system/patterns/bleed.mjs"],"sourcesContent":["import { getPatternStyles, patternFns } from '../helpers.mjs';\nimport { css } from '../css/index.mjs';\n\nconst bleedConfig = {\ntransform(props, { map, isCssUnit, isCssVar }) {\n  const { inline, block, ...rest } = props;\n  const valueFn = (v) => isCssUnit(v) || isCssVar(v) ? v : `token(spacing.${v}, ${v})`;\n  return {\n    \"--bleed-x\": map(inline, valueFn),\n    \"--bleed-y\": map(block, valueFn),\n    marginInline: \"calc(var(--bleed-x, 0) * -1)\",\n    marginBlock: \"calc(var(--bleed-y, 0) * -1)\",\n    ...rest\n  };\n},\ndefaultValues:{inline:'0',block:'0'}}\n\nexport const getBleedStyle = (styles = {}) => {\n  const _styles = getPatternStyles(bleedConfig, styles)\n  return bleedConfig.transform(_styles, patternFns)\n}\n\nexport const bleed = (styles) => css(getBleedStyle(styles))\nbleed.raw = getBleedStyle"],"names":["bleedConfig","props","map","isCssUnit","isCssVar","inline","block","rest","valueFn","v","getBleedStyle","styles","_styles","getPatternStyles","patternFns","bleed","css"],"mappings":";;AAGA,MAAMA,IAAc;AAAA,EACpB,UAAUC,GAAO,EAAE,KAAAC,GAAK,WAAAC,GAAW,UAAAC,EAAQ,GAAI;AAC7C,UAAM,EAAE,QAAAC,GAAQ,OAAAC,GAAO,GAAGC,EAAI,IAAKN,GAC7BO,IAAU,CAACC,MAAMN,EAAUM,CAAC,KAAKL,EAASK,CAAC,IAAIA,IAAI,iBAAiBA,CAAC,KAAKA,CAAC;AACjF,WAAO;AAAA,MACL,aAAaP,EAAIG,GAAQG,CAAO;AAAA,MAChC,aAAaN,EAAII,GAAOE,CAAO;AAAA,MAC/B,cAAc;AAAA,MACd,aAAa;AAAA,MACb,GAAGD;AAAA,IACP;AAAA,EACA;AAAA,EACA,eAAc,EAAC,QAAO,KAAI,OAAM,IAAG;AAAC,GAEvBG,IAAgB,CAACC,IAAS,OAAO;AAC5C,QAAMC,IAAUC,EAAiBb,GAAaW,CAAM;AACpD,SAAOX,EAAY,UAAUY,GAASE,CAAU;AAClD,GAEaC,IAAQ,CAACJ,MAAWK,EAAIN,EAAcC,CAAM,CAAC;AAC1DI,EAAM,MAAML;"}