{"version":3,"file":"Select.mjs","sources":["../../../../src/legacy/components/Select/Select.tsx"],"sourcesContent":["import { useCallback, useEffect, useMemo, useRef, useState, type KeyboardEvent } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport Icon from '../Icon';\nimport { OptionList, type BasicOptionItem } from './OptionList';\nimport { SelectInput, type SelectInputBaseProps } from './SelectInput';\n\nexport interface SelectProps<T extends string | number>\n  extends Omit<SelectInputBaseProps, 'value' | 'onSelect' | 'width'> {\n  searchable?: boolean;\n  onCreate?: (value: string | null) => void;\n  selectedValue: T | null;\n  onSelect: (value: T) => void;\n  options: Array<BasicOptionItem<T>>;\n  width?: number;\n  inputWidth?: number;\n}\n\nconst SelectContainer = styled.div<{ width?: number }>`\n  position: relative;\n  width: ${({ width }) => `${width}px` ?? '100%'};\n`;\n\nconst OptionListWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  margin-top: 6px;\n  z-index: 100;\n`;\n\nexport const CREATE_VALUE = 'CREATE_NEW_VALUE';\n\nexport function Select<T extends string | number>({\n  searchable,\n  onCreate,\n  options,\n  selectedValue,\n  onSelect,\n  width,\n  inputWidth,\n  ...input\n}: SelectProps<T>) {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const dropdownRef = useRef(null);\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [searchLabel, setSearchLabel] = useState<string | null>(null);\n  const [focusedItemIdx, setFocusedItemIdx] = useState(-1);\n\n  const selectedLabel = useMemo(\n    () => options.find(item => item.value === selectedValue)?.label ?? '',\n    [selectedValue],\n  );\n  const optionItems: BasicOptionItem[] = useMemo(() => {\n    if (searchable && searchLabel) {\n      const searchFilteredOptions = options.filter(option =>\n        option.label.toLocaleLowerCase().includes(String(searchLabel).toLocaleLowerCase()),\n      );\n      if (onCreate != null) {\n        return [\n          ...searchFilteredOptions,\n          { icon: Icon.Add, label: String(searchLabel), value: CREATE_VALUE },\n        ];\n      }\n      return searchFilteredOptions;\n    }\n    return options;\n  }, [searchable, options, searchLabel]);\n\n  const clearDropdownAndSearch = useCallback(() => {\n    setSearchLabel(null);\n    setFocusedItemIdx(-1);\n    setShowDropdown(false);\n  }, []);\n\n  const handleKeyUpEvent = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      switch (event.key) {\n        case 'ArrowDown':\n          return setFocusedItemIdx(prev => (prev === optionItems.length - 1 ? -1 : prev + 1));\n        case 'ArrowUp':\n          return setFocusedItemIdx(prev => (prev === -1 ? optionItems.length - 1 : prev - 1));\n        case 'Enter': {\n          if (focusedItemIdx === -1) {\n            return;\n          }\n\n          const item = optionItems[focusedItemIdx];\n          if (item.value === CREATE_VALUE) {\n            return;\n          }\n          onSelect(item.value as T);\n          clearDropdownAndSearch();\n        }\n      }\n    },\n    [setFocusedItemIdx, onSelect, setShowDropdown, optionItems, focusedItemIdx],\n  );\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (wrapperRef.current != null && !wrapperRef.current.contains(event.target as Node)) {\n        clearDropdownAndSearch();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  useEffect(() => {\n    if (!showDropdown || !optionItems?.length || !searchable) {\n      return;\n    }\n\n    const handleKeyEvent = (event: any) => {\n      handleKeyUpEvent(event);\n    };\n\n    document.addEventListener('keyup', handleKeyEvent);\n    return () => {\n      document.removeEventListener('keyup', handleKeyEvent);\n    };\n  }, [dropdownRef, showDropdown, optionItems, searchable, focusedItemIdx]);\n\n  return (\n    <SelectContainer width={width} ref={wrapperRef}>\n      <SelectInput\n        searchable={searchable}\n        width={inputWidth}\n        dropdownOpened={showDropdown}\n        value={searchLabel ?? selectedLabel}\n        onChange={e => {\n          if (searchable) {\n            if (!showDropdown) setShowDropdown(true);\n            setSearchLabel(e.currentTarget.value);\n          }\n        }}\n        onFocus={() => {\n          if (searchable) {\n            setSearchLabel('');\n          }\n        }}\n        onClick={() => {\n          if (showDropdown) {\n            setFocusedItemIdx(-1);\n          }\n          setShowDropdown(!showDropdown);\n        }}\n        readOnly={!searchable}\n        {...input}\n      />\n      {showDropdown && !(optionItems.length === 0) && (\n        <OptionListWrapper ref={dropdownRef}>\n          <OptionList\n            focusedItemIdx={focusedItemIdx}\n            value={selectedValue}\n            option={{\n              type: 'basic',\n              items: optionItems,\n            }}\n            onChange={item => {\n              if (item === CREATE_VALUE) {\n                onCreate?.(String(searchLabel));\n                onSelect(searchLabel as T);\n              } else {\n                onSelect(item as T);\n              }\n              clearDropdownAndSearch();\n            }}\n          />\n        </OptionListWrapper>\n      )}\n    </SelectContainer>\n  );\n}\n"],"names":["SelectContainer","styled","width","OptionListWrapper","CREATE_VALUE","Select","searchable","onCreate","options","selectedValue","onSelect","inputWidth","input","wrapperRef","useRef","dropdownRef","showDropdown","setShowDropdown","useState","searchLabel","setSearchLabel","focusedItemIdx","setFocusedItemIdx","selectedLabel","useMemo","_a","item","optionItems","searchFilteredOptions","option","Icon","clearDropdownAndSearch","useCallback","handleKeyUpEvent","event","prev","useEffect","handleClickOutside","handleKeyEvent","jsxs","jsx","SelectInput","OptionList"],"mappings":"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"}