{"version":3,"file":"MultiSelect.mjs","sources":["../../../../src/legacy/components/Select/MultiSelect.tsx"],"sourcesContent":["import { useCallback, useEffect, useMemo, useRef, useState, type KeyboardEvent } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport Icon from '../Icon';\nimport { MultiSelectInput, SearchInput } from './MultiSelectInput';\nimport { MultipleOptionList, type BasicOptionItem } from './OptionList';\nimport { type SelectInputBaseProps } from './SelectInput';\n\nimport { SearchInputProps } from './MultiSelectInput';\nimport { CREATE_VALUE } from './Select';\n\nconst MULTI_SELECT_MIN_WIDTH = 310;\n\ninterface MultiSelectSearchType extends SearchInputProps {\n  searchable?: boolean;\n}\n\nexport interface MultiSelectProps<T extends string | number>\n  extends Omit<SelectInputBaseProps, 'value' | 'onSelect' | 'width' | 'searchable'> {\n  search?: MultiSelectSearchType;\n  selectedValues: T[];\n  onCreate?: (value: string | null) => void;\n  onSelect: (value: T) => void;\n  onDeleteSingle: (value: T) => void;\n  onDeleteAll: () => void;\n  options: Array<BasicOptionItem<T>>;\n  width?: number;\n}\n\n/** min-width is 310px */\nexport function MultiSelect<T extends string | number>({\n  search = {\n    searchable: false,\n  },\n  options,\n  selectedValues = [],\n  onCreate,\n  onSelect,\n  onDeleteSingle,\n  onDeleteAll,\n  width,\n  ...input\n}: MultiSelectProps<T>) {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const dropdownRef = useRef(null);\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [focusedItemIdx, setFocusedItemIdx] = useState(-1);\n  const [searchInputValue, setSearchInputValue] = useState<string | null>(null);\n\n  const selectedOptionItem = useMemo(() => {\n    return options.filter(option => selectedValues.includes(option.value as T));\n  }, [options.length, selectedValues?.length, options?.[0]?.value, selectedValues?.[0]]);\n\n  const optionItems: BasicOptionItem[] = useMemo(() => {\n    if (search.searchable && searchInputValue) {\n      const searchFilteredOptions = options.filter(option =>\n        option.label.toLocaleLowerCase().includes(String(searchInputValue).toLocaleLowerCase()),\n      );\n      if (onCreate != null) {\n        return [\n          ...searchFilteredOptions,\n          { icon: Icon.Add, label: String(searchInputValue), value: CREATE_VALUE },\n        ];\n      }\n      return searchFilteredOptions;\n    }\n    return options;\n  }, [search.searchable, options, options.length, searchInputValue]);\n\n  const clearDropdownAndSearch = useCallback(() => {\n    setSearchInputValue('');\n    setFocusedItemIdx(-1);\n    setShowDropdown(false);\n  }, [setSearchInputValue, setFocusedItemIdx, setShowDropdown]);\n\n  const onOptionListChange = useCallback(\n    (item: BasicOptionItem<T>) => {\n      if (item.value === CREATE_VALUE) {\n        onCreate?.(String(searchInputValue));\n        onSelect(searchInputValue as T);\n      } else if (selectedValues.includes(item.value as T)) {\n        onDeleteSingle(item.value as T);\n      } else {\n        onSelect(item.value as T);\n      }\n    },\n    [onCreate, searchInputValue, selectedValues, onDeleteSingle, onSelect],\n  );\n\n  const handleKeyUpEvent = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      switch (event.key) {\n        case 'ArrowDown':\n          return setFocusedItemIdx(prev => (prev === optionItems.length - 1 ? -1 : prev + 1));\n        case 'ArrowUp':\n          return setFocusedItemIdx(prev => (prev === -1 ? optionItems.length - 1 : prev - 1));\n        case 'Enter': {\n          if (focusedItemIdx === -1) {\n            return;\n          }\n\n          const item = optionItems[focusedItemIdx];\n          if (item.value === CREATE_VALUE) {\n            return;\n          }\n          onSelect(item.value as T);\n          clearDropdownAndSearch();\n        }\n      }\n    },\n    [setFocusedItemIdx, setShowDropdown, onSelect, optionItems, focusedItemIdx],\n  );\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (wrapperRef.current != null && !wrapperRef.current.contains(event.target as Node)) {\n        clearDropdownAndSearch();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  useEffect(() => {\n    if (!showDropdown || !optionItems?.length || !search.searchable) {\n      return;\n    }\n\n    const handleKeyEvent = (event: any) => {\n      handleKeyUpEvent(event);\n    };\n\n    document.addEventListener('keyup', handleKeyEvent);\n    return () => {\n      document.removeEventListener('keyup', handleKeyEvent);\n    };\n  }, [dropdownRef, showDropdown, optionItems, search.searchable, focusedItemIdx]);\n\n  return (\n    <SelectContainer width={width} ref={wrapperRef}>\n      <MultiSelectInput<T>\n        {...input}\n        optionItems={selectedOptionItem}\n        onDeleteSingle={onDeleteSingle}\n        onDeleteAll={onDeleteAll}\n        width={width}\n        dropdownOpened={showDropdown}\n        onFocus={() => search.searchable && setSearchInputValue('')}\n        onClick={() => {\n          showDropdown && setFocusedItemIdx(-1);\n          setShowDropdown(!showDropdown);\n        }}\n        readOnly={!search.searchable}\n      />\n      {showDropdown && (\n        <OptionListWrapper ref={dropdownRef}>\n          <MultipleOptionList<T>\n            focusedItemIdx={focusedItemIdx}\n            values={selectedValues}\n            option={{\n              type: 'basic',\n              items: optionItems as BasicOptionItem<T>[],\n            }}\n            onChange={onOptionListChange}\n            searchInput={\n              search.searchable && (\n                <SearchInput\n                  {...search}\n                  type=\"text\"\n                  value={searchInputValue ?? ''}\n                  onChange={e => setSearchInputValue(e.currentTarget.value)}\n                />\n              )\n            }\n          />\n        </OptionListWrapper>\n      )}\n    </SelectContainer>\n  );\n}\n\n//TODO: make input width 100% available as default\nconst SelectContainer = styled.div<{ width?: number }>`\n  width: ${({ width }) => `${width}px` ?? '100%'};\n  min-width: ${MULTI_SELECT_MIN_WIDTH}px;\n\n  position: relative;\n`;\n\nconst OptionListWrapper = styled.div`\n  width: 100%;\n  margin-top: 6px;\n\n  position: absolute;\n  z-index: 100;\n`;\n"],"names":["MULTI_SELECT_MIN_WIDTH","MultiSelect","search","options","selectedValues","onCreate","onSelect","onDeleteSingle","onDeleteAll","width","input","wrapperRef","useRef","dropdownRef","showDropdown","setShowDropdown","useState","focusedItemIdx","setFocusedItemIdx","searchInputValue","setSearchInputValue","selectedOptionItem","useMemo","option","_a","optionItems","searchFilteredOptions","Icon","CREATE_VALUE","clearDropdownAndSearch","useCallback","onOptionListChange","item","handleKeyUpEvent","event","prev","useEffect","handleClickOutside","handleKeyEvent","jsxs","SelectContainer","jsx","MultiSelectInput","OptionListWrapper","MultipleOptionList","SearchInput","e","styled"],"mappings":"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"}