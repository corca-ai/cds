{"version":3,"file":"OptionList.mjs","sources":["../../../../src/legacy/components/Select/OptionList.tsx"],"sourcesContent":["import { Fragment, useEffect, useRef, type ReactElement, type ReactNode } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport Icon from '../Icon';\nimport { type IconProps } from '../Icon/type';\nimport { B3, B4 } from '../Text';\nimport { color } from '../styles';\n\nexport interface BasicOptionItem<T = string | number> {\n  label: string;\n  value: T;\n  icon?: (props: IconProps) => ReactElement;\n  disabled?: boolean;\n}\n\nexport interface SectionOptionItem<T = string | number> {\n  sectionTitle: ReactNode;\n  sectionItems: Array<BasicOptionItem<T>>;\n}\n\ninterface BasicOptionList<T> {\n  type: 'basic';\n  items: Array<BasicOptionItem<T>>;\n}\n\ninterface SectionOptionList<T> {\n  type: 'section';\n  items: Array<SectionOptionItem<T>>;\n}\n\ninterface OptionListProps<T = string | number> {\n  width?: number;\n  onChange: (value: T) => void;\n  option: BasicOptionList<T> | SectionOptionList<T>;\n  value: T;\n  maxDropdownItemsToShow?: number;\n  focusedItemIdx?: number;\n}\n\nconst LIST_ITEM_HEIGHT = 32;\n\nconst MINUS_ICON_CLASS_NAME = 'minus-icon';\n\nfunction OptionItems<T>({\n  value,\n  items,\n  onChange,\n  focusedItemIdx,\n}: {\n  value: T;\n  items: Array<BasicOptionItem<T>>;\n  onChange: (value: T) => void;\n  focusedItemIdx: number;\n}) {\n  return (\n    <>\n      {items.map((item, i) => {\n        const Icon = item.icon;\n        return (\n          <ItemList key={i} role=\"option\">\n            <ItemButton\n              focused={focusedItemIdx === i}\n              disabled={item.disabled}\n              aria-selected={value === item.value}\n              selected={value === item.value}\n              onClick={() => {\n                if (!item.disabled) {\n                  onChange(item.value);\n                }\n              }}\n            >\n              {Icon != null && (\n                <Icon size={20} {...(item.disabled && { color: color['grey-40'] })} />\n              )}\n              <B3 c={item.disabled ? 'grey-40' : 'grey-80'}>{item.label}</B3>\n            </ItemButton>\n          </ItemList>\n        );\n      })}\n    </>\n  );\n}\n\nexport function OptionList<T = string | number>({\n  onChange,\n  option,\n  value,\n  width,\n  maxDropdownItemsToShow = 6,\n  focusedItemIdx = -1,\n}: OptionListProps<T>) {\n  const scrollRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    if (option.items.length === 0) {\n      return;\n    }\n    if (focusedItemIdx === -1) {\n      scrollRef.current!.children[0]?.scrollIntoView({\n        block: 'nearest',\n      });\n      return;\n    }\n    scrollRef.current!.children[focusedItemIdx]?.scrollIntoView({\n      block: 'nearest',\n    });\n  }, [focusedItemIdx, option.items.length]);\n\n  return (\n    <ListContainer width={width} maxDropdownItemsToShow={maxDropdownItemsToShow} ref={scrollRef}>\n      {option.type === 'section' ? (\n        option.items.map((section, i) => (\n          <Fragment key={i}>\n            <SectionTitleWrapper>\n              <B4>{section.sectionTitle}</B4>\n            </SectionTitleWrapper>\n            <OptionItems\n              value={value}\n              items={section.sectionItems}\n              onChange={onChange}\n              focusedItemIdx={focusedItemIdx}\n            />\n          </Fragment>\n        ))\n      ) : (\n        <OptionItems\n          value={value}\n          items={option.items}\n          onChange={onChange}\n          focusedItemIdx={focusedItemIdx}\n        />\n      )}\n    </ListContainer>\n  );\n}\n\ninterface MultipleOptionListProps<T = string | number>\n  extends Omit<OptionListProps<T>, 'value' | 'onChange'> {\n  values: T[];\n  searchInput?: ReactNode;\n  onChange: (value: BasicOptionItem<T>) => void;\n}\n\nfunction MultipleOptionItems<T>({\n  values,\n  items,\n  onChange,\n  focusedItemIdx,\n  searchInput,\n}: {\n  values: T[];\n  items: Array<BasicOptionItem<T>>;\n  onChange: (value: BasicOptionItem<T>) => void;\n  focusedItemIdx: number;\n  searchInput?: ReactNode;\n}) {\n  return (\n    <>\n      {searchInput}\n      {items.map((item, i) => {\n        const ItemIcon = item.icon;\n        const alreadySelected = values?.includes(item.value);\n        return (\n          <ItemList key={i} role=\"option\">\n            <ItemButtonWithMinus\n              focused={focusedItemIdx === i}\n              disabled={item.disabled}\n              aria-selected={alreadySelected}\n              selected={alreadySelected}\n              onClick={() => {\n                if (!item.disabled) {\n                  onChange(item);\n                }\n              }}\n            >\n              <Flex>\n                {ItemIcon != null && (\n                  <ItemIcon size={20} {...(item.disabled && { color: color['grey-40'] })} />\n                )}\n                <B3 c={item.disabled ? 'grey-40' : 'grey-80'}>{item.label}</B3>\n              </Flex>\n              {alreadySelected && (\n                <div className={MINUS_ICON_CLASS_NAME}>\n                  <Icon.Minus size={24} />\n                </div>\n              )}\n            </ItemButtonWithMinus>\n          </ItemList>\n        );\n      })}\n    </>\n  );\n}\n\nexport function MultipleOptionList<T = string | number>({\n  searchInput,\n  onChange,\n  option,\n  values,\n  width,\n  maxDropdownItemsToShow = 6,\n  focusedItemIdx = -1,\n}: MultipleOptionListProps<T>) {\n  const scrollRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    if (option.items.length === 0) {\n      return;\n    }\n    if (focusedItemIdx === -1) {\n      scrollRef.current!.children[0]?.scrollIntoView({\n        block: 'nearest',\n      });\n      return;\n    }\n    scrollRef.current!.children[focusedItemIdx]?.scrollIntoView({\n      block: 'nearest',\n    });\n  }, [focusedItemIdx, option.items.length]);\n\n  return (\n    <ListContainer width={width} maxDropdownItemsToShow={maxDropdownItemsToShow} ref={scrollRef}>\n      {option.type === 'section' ? (\n        option.items.map((section, i) => (\n          <Fragment key={i}>\n            <SectionTitleWrapper>\n              <B4>{section.sectionTitle}</B4>\n            </SectionTitleWrapper>\n            <MultipleOptionItems<T>\n              values={values}\n              items={section.sectionItems}\n              onChange={onChange}\n              focusedItemIdx={focusedItemIdx}\n              searchInput={searchInput}\n            />\n          </Fragment>\n        ))\n      ) : (\n        <MultipleOptionItems<T>\n          values={values}\n          items={option.items}\n          onChange={onChange}\n          focusedItemIdx={focusedItemIdx}\n          searchInput={searchInput}\n        />\n      )}\n    </ListContainer>\n  );\n}\nconst ListContainer = styled.ul<{\n  width?: number;\n  maxDropdownItemsToShow: number;\n}>`\n  display: flex;\n  width: ${({ width }) => `${width}px` ?? '100%'};\n  max-height: ${({ maxDropdownItemsToShow }) =>\n    `${maxDropdownItemsToShow * (LIST_ITEM_HEIGHT + 4) + 20 - 4}px`};\n  height: 100%;\n  padding: 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 4px;\n  border-radius: 8px;\n  background: ${color.white};\n  box-shadow: 0px 0px 1px 0px rgba(132, 132, 132, 0.31), 0px 2px 5px 0px rgba(70, 70, 70, 0.2);\n  overflow: auto;\n  list-style: none;\n`;\n\nconst SectionTitleWrapper = styled.li`\n  padding: 6px 8px;\n`;\n\nconst ItemList = styled.li`\n  width: 100%;\n`;\n\nconst ItemButton = styled.div<{\n  selected?: boolean;\n  disabled?: boolean;\n  focused: boolean;\n}>`\n  border: none;\n  overflow: visible;\n  cursor: pointer;\n  display: flex;\n  width: 100%;\n  min-height: ${LIST_ITEM_HEIGHT}px;\n  padding: 6px 8px;\n  align-items: center;\n  align-self: stretch;\n  gap: 6px;\n  border-radius: 4px;\n  text-align: left;\n  background-color: ${({ selected, focused }) =>\n    selected ? color['grey-30'] : focused ? color['grey-20'] : color.white};\n  &:hover {\n    background-color: ${({ disabled, selected }) =>\n      disabled ? 'none' : selected ? color['grey-40'] : color['grey-20']};\n    .${MINUS_ICON_CLASS_NAME} {\n      opacity: 1;\n    }\n  }\n  svg {\n    display: list-item;\n    flex-shrink: 0;\n  }\n  span {\n    word-break: break-word;\n  }\n\n  ${({ disabled }) =>\n    disabled &&\n    `background: none;\n    cursor: not-allowed;\n`}\n  .${MINUS_ICON_CLASS_NAME} {\n    opacity: 0;\n    transition: opacity 0.2s ease;\n  }\n`;\n\nconst ItemButtonWithMinus = styled(ItemButton)`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n`;\n"],"names":["LIST_ITEM_HEIGHT","MINUS_ICON_CLASS_NAME","OptionItems","value","items","onChange","focusedItemIdx","jsx","Fragment","item","i","Icon","ItemList","jsxs","ItemButton","color","B3","OptionList","option","width","maxDropdownItemsToShow","scrollRef","useRef","useEffect","_a","_b","ListContainer","section","SectionTitleWrapper","B4","MultipleOptionItems","values","searchInput","ItemIcon","alreadySelected","ItemButtonWithMinus","Flex","MultipleOptionList","styled","selected","focused","disabled"],"mappings":"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"}