{"version":3,"file":"Modal.mjs","sources":["../../../../src/legacy/components/Modal/Modal.tsx"],"sourcesContent":["import { CSSProperties, type ReactElement } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport { ModalContainer } from './ModalContainer';\nimport { BottomBar, ButtonAction } from '../BottomBar';\nimport Icon from '../Icon';\nimport { B1, H1 } from '../Text';\nimport { color } from '../styles';\n\nconst Container = styled.div<{ width?: CSSProperties['width'] }>`\n  background-color: ${color.white};\n  display: inline-flex;\n  width: ${({ width }) => width ?? '669px'};\n  padding: 0;\n  flex-direction: column;\n`;\n\nconst HeaderAndBody = styled.div`\n  padding: 50px 40px 20px 40px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 50px;\n`;\n\nconst TitleAndDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst CloseIconContainer = styled.div`\n  cursor: pointer;\n`;\n\nconst Body = styled.div``;\n\ninterface ModalButtonProps extends ButtonAction {\n  onClick: () => void;\n}\n\ninterface Props {\n  title: string;\n  subtitle: string;\n  children: ReactElement;\n  opened: boolean;\n  closeOnBackdropClick?: boolean;\n  width?: CSSProperties['width'];\n  cancel: ModalButtonProps;\n  confirm: ModalButtonProps;\n}\n\nexport function Modal({\n  title,\n  subtitle,\n  opened,\n  cancel,\n  confirm,\n  children,\n  closeOnBackdropClick,\n  width,\n}: Props) {\n  return (\n    <ModalContainer\n      opened={opened}\n      borderRadius={12}\n      onClose={cancel.onClick}\n      closeOnBackdropClick={closeOnBackdropClick}\n    >\n      <Container width={width}>\n        <HeaderAndBody>\n          <Header>\n            <TitleAndDescription>\n              <H1>{title}</H1>\n              <B1>{subtitle}</B1>\n            </TitleAndDescription>\n            <CloseIconContainer onClick={cancel.onClick}>\n              <Icon.CancelLarge size={24} />\n            </CloseIconContainer>\n          </Header>\n          <Body>{children}</Body>\n        </HeaderAndBody>\n      </Container>\n      <BottomBar dismiss={cancel} confirm={confirm} />\n    </ModalContainer>\n  );\n}\n"],"names":["Container","styled","color","width","HeaderAndBody","Header","TitleAndDescription","CloseIconContainer","Body","Modal","title","subtitle","opened","cancel","confirm","children","closeOnBackdropClick","jsxs","ModalContainer","jsx","H1","B1","Icon","BottomBar"],"mappings":";;;;;;;AAUA,MAAMA,IAAYC,EAAO;AAAA,sBACHC,EAAM,KAAK;AAAA;AAAA,WAEtB,CAAC,EAAE,OAAAC,QAAYA,KAAS,OAAO;AAAA;AAAA;AAAA,GAKpCC,IAAgBH,EAAO;AAAA;AAAA,GAIvBI,IAASJ,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,GAOhBK,IAAsBL,EAAO;AAAA;AAAA;AAAA;AAAA,GAM7BM,IAAqBN,EAAO;AAAA;AAAA,GAI5BO,IAAOP,EAAO;AAiBb,SAASQ,EAAM;AAAA,EACpB,OAAAC;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,QAAAC;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC;AAAA,EACA,sBAAAC;AAAA,EACA,OAAAb;AACF,GAAU;AAEN,SAAA,gBAAAc;AAAA,IAACC;AAAA,IAAA;AAAA,MACC,QAAAN;AAAA,MACA,cAAc;AAAA,MACd,SAASC,EAAO;AAAA,MAChB,sBAAAG;AAAA,MAEA,UAAA;AAAA,QAAC,gBAAAG,EAAAnB,GAAA,EAAU,OAAAG,GACT,UAAA,gBAAAc,EAACb,GACC,EAAA,UAAA;AAAA,UAAA,gBAAAa,EAACZ,GACC,EAAA,UAAA;AAAA,YAAA,gBAAAY,EAACX,GACC,EAAA,UAAA;AAAA,cAAA,gBAAAa,EAACC,KAAI,UAAMV,EAAA,CAAA;AAAA,cACX,gBAAAS,EAACE,KAAI,UAASV,EAAA,CAAA;AAAA,YAAA,GAChB;AAAA,YACA,gBAAAQ,EAACZ,GAAmB,EAAA,SAASM,EAAO,SAClC,UAAC,gBAAAM,EAAAG,EAAK,aAAL,EAAiB,MAAM,GAAA,CAAI,EAC9B,CAAA;AAAA,UAAA,GACF;AAAA,UACA,gBAAAH,EAACX,KAAM,UAAAO,GAAS;AAAA,QAAA,EAAA,CAClB,EACF,CAAA;AAAA,QACC,gBAAAI,EAAAI,GAAA,EAAU,SAASV,GAAQ,SAAAC,EAAkB,CAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGpD;"}