{"version":3,"file":"RadioItem.mjs","sources":["../../../../src/legacy/components/Radio/RadioItem.tsx"],"sourcesContent":["import { useMemo } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport { B3 } from '../Text';\nimport { Tooltip } from '../Tooltip';\nimport { color } from '../styles';\n\nconst Circle = styled.input`\n  width: 16px;\n  height: 16px;\n  border-radius: 100px;\n  appearance: none;\n  margin: 0;\n\n  background-color: ${color.white};\n  border: 1px solid ${color['grey-50']};\n\n  &:disabled {\n    background-color: ${color['grey-20']};\n    border: 1px solid ${color['grey-40']};\n  }\n  &:checked {\n    border: 4px solid ${color['main-black']};\n  }\n  &:checked:disabled {\n    border: 4px solid ${color['grey-40']};\n  }\n`;\n\nconst Container = styled.div`\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n`;\n\nconst Label = styled.label`\n  display: contents;\n`;\n\nexport interface RadioItemProps<T> {\n  label?: string;\n  id?: string;\n  value: T;\n  disabled?: boolean;\n  selected: boolean;\n  onSelect: (value: T) => void;\n  tooltip?: string;\n}\n\nexport function RadioItem<T extends string | number>({\n  label,\n  id,\n  value,\n  disabled,\n  selected,\n  onSelect,\n  tooltip,\n}: RadioItemProps<T>) {\n  const htmlId = useMemo(() => id ?? `${label}:${value}`, [label, value]);\n  const RadioCircle = (\n    <Circle\n      type=\"radio\"\n      value={value}\n      checked={selected}\n      disabled={disabled}\n      id={htmlId}\n      onChange={() => {\n        onSelect(value);\n      }}\n    />\n  );\n  return (\n    <Container>\n      {tooltip ? (\n        <Tooltip withArrow direction=\"top-start\" content={tooltip}>\n          {RadioCircle}\n        </Tooltip>\n      ) : (\n        RadioCircle\n      )}\n      {label && (\n        <Label htmlFor={htmlId}>\n          <B3 c={disabled ? 'grey-50' : 'grey-80'}>{label}</B3>\n        </Label>\n      )}\n    </Container>\n  );\n}\n"],"names":["Circle","styled","color","Container","Label","RadioItem","label","id","value","disabled","selected","onSelect","tooltip","htmlId","useMemo","RadioCircle","jsx","Tooltip","B3"],"mappings":";;;;;;AAQA,MAAMA,IAASC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOAC,EAAM,KAAK;AAAA,sBACXA,EAAM,SAAS,CAAC;AAAA;AAAA;AAAA,wBAGdA,EAAM,SAAS,CAAC;AAAA,wBAChBA,EAAM,SAAS,CAAC;AAAA;AAAA;AAAA,wBAGhBA,EAAM,YAAY,CAAC;AAAA;AAAA;AAAA,wBAGnBA,EAAM,SAAS,CAAC;AAAA;AAAA,GAIlCC,IAAYF,EAAO;AAAA;AAAA;AAAA;AAAA,GAMnBG,IAAQH,EAAO;AAAA;AAAA;AAcd,SAASI,EAAqC;AAAA,EACnD,OAAAC;AAAA,EACA,IAAAC;AAAA,EACA,OAAAC;AAAA,EACA,UAAAC;AAAA,EACA,UAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AACF,GAAsB;AACpB,QAAMC,IAASC,EAAQ,MAAMP,KAAM,GAAGD,CAAK,IAAIE,CAAK,IAAI,CAACF,GAAOE,CAAK,CAAC,GAChEO,IACJ,gBAAAC;AAAA,IAAChB;AAAA,IAAA;AAAA,MACC,MAAK;AAAA,MACL,OAAAQ;AAAA,MACA,SAASE;AAAA,MACT,UAAAD;AAAA,MACA,IAAII;AAAA,MACJ,UAAU,MAAM;AACd,QAAAF,EAASH,CAAK;AAAA,MAChB;AAAA,IAAA;AAAA,EAAA;AAGJ,2BACGL,GACE,EAAA,UAAA;AAAA,IACCS,IAAA,gBAAAI,EAACC,KAAQ,WAAS,IAAC,WAAU,aAAY,SAASL,GAC/C,UAAAG,EAAA,CACH,IAEAA;AAAA,IAEDT,KACC,gBAAAU,EAACZ,GAAM,EAAA,SAASS,GACd,UAAA,gBAAAG,EAACE,GAAG,EAAA,GAAGT,IAAW,YAAY,WAAY,UAAAH,EAAM,CAAA,GAClD;AAAA,EAEJ,EAAA,CAAA;AAEJ;"}