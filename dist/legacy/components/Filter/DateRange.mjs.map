{"version":3,"file":"DateRange.mjs","sources":["../../../../src/legacy/components/Filter/DateRange.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { type DatePickerLocale } from '../../utils/types/locale.types';\nimport DatePicker from '../DatePicker';\nimport { B3 } from '../Text';\n\nconst DatePickerRange = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst DatePickerItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 10px;\n\n  div:first-of-type {\n    flex-grow: 1;\n  }\n`;\n\n/**\n *  dateRange - [startDate, endDate]\n */\nexport interface FilterDateRangeProps {\n  dateRange: Array<Date | null>;\n  changeValue: (dateRange: Array<Date | null>) => void;\n  startDateLabel?: string;\n  endDateLabel?: string;\n  language: DatePickerLocale;\n}\n\n/**\n * @param dateRange - [startDate, endDate]\n */\nexport function FilterDateRange({\n  dateRange,\n  changeValue,\n  startDateLabel,\n  endDateLabel,\n  language,\n}: FilterDateRangeProps) {\n  return (\n    <DatePickerRange>\n      <DatePickerItem>\n        <DatePicker.Date\n          selected={dateRange[0]}\n          onChange={date => {\n            changeValue([date, dateRange[1]]);\n          }}\n          language={language}\n          maxDate={dateRange[1]}\n          placeholderText=\"Start Date\"\n        />\n        {startDateLabel && <B3>{startDateLabel}</B3>}\n      </DatePickerItem>\n      <DatePickerItem>\n        <DatePicker.Date\n          selected={dateRange[1]}\n          onChange={date => {\n            changeValue([dateRange[0], date]);\n          }}\n          language={language}\n          minDate={dateRange[0]}\n          placeholderText=\"End Date\"\n        />\n        {endDateLabel && <B3>{endDateLabel}</B3>}\n      </DatePickerItem>\n    </DatePickerRange>\n  );\n}\n"],"names":["DatePickerRange","styled","DatePickerItem","FilterDateRange","dateRange","changeValue","startDateLabel","endDateLabel","language","jsxs","jsx","DatePicker","date","B3"],"mappings":";;;;AAMA,MAAMA,IAAkBC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,GAOzBC,IAAiBD,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBvB,SAASE,EAAgB;AAAA,EAC9B,WAAAC;AAAA,EACA,aAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,cAAAC;AAAA,EACA,UAAAC;AACF,GAAyB;AACvB,2BACGR,GACC,EAAA,UAAA;AAAA,IAAA,gBAAAS,EAACP,GACC,EAAA,UAAA;AAAA,MAAA,gBAAAQ;AAAA,QAACC,EAAW;AAAA,QAAX;AAAA,UACC,UAAUP,EAAU,CAAC;AAAA,UACrB,UAAU,CAAQQ,MAAA;AAChB,YAAAP,EAAY,CAACO,GAAMR,EAAU,CAAC,CAAC,CAAC;AAAA,UAClC;AAAA,UACA,UAAAI;AAAA,UACA,SAASJ,EAAU,CAAC;AAAA,UACpB,iBAAgB;AAAA,QAAA;AAAA,MAClB;AAAA,MACCE,KAAmB,gBAAAI,EAAAG,GAAA,EAAI,UAAeP,EAAA,CAAA;AAAA,IAAA,GACzC;AAAA,sBACCJ,GACC,EAAA,UAAA;AAAA,MAAA,gBAAAQ;AAAA,QAACC,EAAW;AAAA,QAAX;AAAA,UACC,UAAUP,EAAU,CAAC;AAAA,UACrB,UAAU,CAAQQ,MAAA;AAChB,YAAAP,EAAY,CAACD,EAAU,CAAC,GAAGQ,CAAI,CAAC;AAAA,UAClC;AAAA,UACA,UAAAJ;AAAA,UACA,SAASJ,EAAU,CAAC;AAAA,UACpB,iBAAgB;AAAA,QAAA;AAAA,MAClB;AAAA,MACCG,KAAiB,gBAAAG,EAAAG,GAAA,EAAI,UAAaN,EAAA,CAAA;AAAA,IAAA,GACrC;AAAA,EACF,EAAA,CAAA;AAEJ;"}