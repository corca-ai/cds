{"version":3,"file":"index.mjs","sources":["../../../../src/legacy/components/Navigation/index.tsx"],"sourcesContent":["import { type ReactElement, type ReactNode, cloneElement, createElement, useCallback } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport { type IconProps } from '../Icon/type';\nimport { Text } from '../Text';\nimport { color, typography } from '../styles';\n\nexport interface NavItemType {\n  icon: (icon: IconProps) => ReactElement;\n  label: string;\n  href: string;\n  selected?: boolean;\n}\n\nexport interface NavbarGroup {\n  title: string;\n  navItems: NavItemType[];\n}\n\nconst Container = styled.nav`\n  display: inline-flex;\n  overflow-y: scroll;\n  height: 100vh;\n  padding: 25px 14px 18px 14px;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n  flex-shrink: 0;\n  background: ${color.white};\n  box-shadow: 0px 4px 15px 0px rgba(0, 0, 0, 0.1);\n`;\n\nconst NavContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n`;\n\nconst LogoContainer = styled.div`\n  display: flex;\n  width: 212px;\n  height: 60px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NavigationList = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 20px;\n`;\n\nconst Section = styled.ol`\n  display: flex;\n  width: 212px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 6px;\n`;\n\nconst TitleWrapper = styled.div`\n  width: 100%;\n  padding: 0 8px;\n  height: 28px;\n  display: flex;\n  align-items: center;\n`;\n\nconst NavItem = styled.li<{ selectedColor?: string; selected: boolean }>`\n  display: flex;\n  width: 212px;\n  height: 36px;\n  padding: 8px;\n  align-items: center;\n  gap: 8px;\n  flex-shrink: 0;\n  border-radius: 8px;\n  cursor: pointer;\n  ${({ selected, selectedColor }) =>\n    selected\n      ? `\n          background: ${selectedColor};\n          span {\n            font-weight: ${typography.weight.semibold} !important;\n          }\n        `\n      : `&:hover {background: ${color['grey-20']};}`}\n`;\n\nconst BottomSection = styled.div`\n  width: 100%;\n`;\n\nexport interface NavigationProps {\n  logoImage: { src: string; width: number; height: number };\n  logoHref: string;\n  bottom?: ReactNode;\n  navbarGroup: NavbarGroup[];\n  selectedColor?: string;\n  LinkElement?: ReactElement;\n}\n\nexport function Navigation({\n  logoImage,\n  logoHref,\n  bottom,\n  navbarGroup,\n  selectedColor,\n  LinkElement,\n}: NavigationProps) {\n  const Link = useCallback(\n    ({ href, children }: { href: string; children: ReactElement }) =>\n      LinkElement != null\n        ? cloneElement(LinkElement, { href }, children)\n        : createElement('a', { href }, children),\n    [],\n  );\n  return (\n    <Container>\n      <NavContainer>\n        <LogoContainer>\n          <Link href={logoHref}>\n            <img\n              alt=\"logo-image\"\n              src={logoImage.src}\n              width={logoImage.width}\n              height={logoImage.height}\n            />\n          </Link>\n        </LogoContainer>\n        <NavigationList>\n          {navbarGroup.map(section => (\n            <Section key={section.title}>\n              <TitleWrapper>\n                <Text size=\"xxs\" fw=\"bold\" c=\"grey-80\">\n                  {section.title}\n                </Text>\n              </TitleWrapper>\n              {section.navItems.map(item => {\n                const Icon = item.icon;\n                return (\n                  <Link href={item.href} key={item.label}>\n                    <NavItem {...(selectedColor && { selectedColor })} selected={!!item.selected}>\n                      <Icon size={20} />\n                      <Text size=\"s\" fw=\"regular\">\n                        {item.label}\n                      </Text>\n                    </NavItem>\n                  </Link>\n                );\n              })}\n            </Section>\n          ))}\n        </NavigationList>\n      </NavContainer>\n      <BottomSection>{bottom}</BottomSection>\n    </Container>\n  );\n}\n"],"names":["Container","styled","color","NavContainer","LogoContainer","NavigationList","Section","TitleWrapper","NavItem","selected","selectedColor","typography","BottomSection","Navigation","logoImage","logoHref","bottom","navbarGroup","LinkElement","Link","useCallback","href","children","cloneElement","createElement","jsxs","jsx","section","Text","item","Icon"],"mappings":";;;;;AAoBA,MAAMA,IAAYC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBASTC,EAAM,KAAK;AAAA;AAAA,GAIrBC,IAAeF,EAAO;AAAA;AAAA;AAAA;AAAA,GAMtBG,IAAgBH,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASvBI,IAAiBJ,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,GAOxBK,IAAUL,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQjBM,IAAeN,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQtBO,IAAUP,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUnB,CAAC,EAAE,UAAAQ,GAAU,eAAAC,QACbD,IACI;AAAA,wBACgBC,CAAa;AAAA;AAAA,2BAEVC,EAAW,OAAO,QAAQ;AAAA;AAAA,YAG7C,wBAAwBT,EAAM,SAAS,CAAC,IAAI;AAAA,GAG9CU,IAAgBX,EAAO;AAAA;AAAA;AAatB,SAASY,EAAW;AAAA,EACzB,WAAAC;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAP;AAAA,EACA,aAAAQ;AACF,GAAoB;AAClB,QAAMC,IAAOC;AAAA,IACX,CAAC,EAAE,MAAAC,GAAM,UAAAC,QACPJ,KAAe,OACXK,EAAaL,GAAa,EAAE,MAAAG,EAAK,GAAGC,CAAQ,IAC5CE,EAAc,KAAK,EAAE,MAAAH,KAAQC,CAAQ;AAAA,IAC3C,CAAC;AAAA,EAAA;AAEH,2BACGtB,GACC,EAAA,UAAA;AAAA,IAAA,gBAAAyB,EAACtB,GACC,EAAA,UAAA;AAAA,MAAA,gBAAAuB,EAACtB,GACC,EAAA,UAAA,gBAAAsB,EAACP,GAAK,EAAA,MAAMJ,GACV,UAAA,gBAAAW;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,KAAI;AAAA,UACJ,KAAKZ,EAAU;AAAA,UACf,OAAOA,EAAU;AAAA,UACjB,QAAQA,EAAU;AAAA,QAAA;AAAA,SAEtB,EACF,CAAA;AAAA,wBACCT,GACE,EAAA,UAAAY,EAAY,IAAI,CAAAU,wBACdrB,GACC,EAAA,UAAA;AAAA,QAAC,gBAAAoB,EAAAnB,GAAA,EACC,UAAC,gBAAAmB,EAAAE,GAAA,EAAK,MAAK,OAAM,IAAG,QAAO,GAAE,WAC1B,UAAQD,EAAA,MACX,CAAA,GACF;AAAA,QACCA,EAAQ,SAAS,IAAI,CAAQE,MAAA;AAC5B,gBAAMC,IAAOD,EAAK;AAClB,mCACGV,GAAK,EAAA,MAAMU,EAAK,MACf,4BAACrB,GAAS,EAAA,GAAIE,KAAiB,EAAE,eAAAA,KAAkB,UAAU,CAAC,CAACmB,EAAK,UAClE,UAAA;AAAA,YAAC,gBAAAH,EAAAI,GAAA,EAAK,MAAM,GAAI,CAAA;AAAA,8BACfF,GAAK,EAAA,MAAK,KAAI,IAAG,WACf,YAAK,OACR;AAAA,UACF,EAAA,CAAA,EAAA,GAN0BC,EAAK,KAOjC;AAAA,QAAA,CAEH;AAAA,MAlBW,EAAA,GAAAF,EAAQ,KAmBtB,CACD,GACH;AAAA,IAAA,GACF;AAAA,IACA,gBAAAD,EAACd,KAAe,UAAOI,EAAA,CAAA;AAAA,EACzB,EAAA,CAAA;AAEJ;"}