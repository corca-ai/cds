{"version":3,"file":"index.mjs","sources":["../../../../../src/legacy/components/DatePicker/SingleDate/index.tsx"],"sourcesContent":["import { type LegacyRef, type MouseEventHandler, forwardRef, useRef } from 'react';\nimport DatePicker, { type ReactDatePickerProps } from 'react-datepicker';\n\nimport styled from '@emotion/styled';\n\nimport { formatDateByLanguage } from '../../../utils/date';\nimport { type DatePickerLocale } from '../../../utils/types/locale.types';\nimport Icon from '../../Icon';\nimport { DateInput, type DateInputProps } from '../../Input/DateInput';\nimport { color } from '../../styles';\nimport { MONTHS } from '../constant';\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  selected: Date | null;\n  onChange: (date: Date) => void;\n  language: DatePickerLocale;\n  inputProps?: Omit<DateInputProps, 'disabled'>;\n  dateFormatter?: (date: Date, language: DatePickerLocale) => string;\n}\n\nexport function SingleDate({\n  selected,\n  onChange,\n  language,\n  inputProps,\n  dateFormatter,\n  ...props\n}: DatePickerProps) {\n  const datePickerRef = useRef<DatePicker>(null);\n  return (\n    <DatepickerWrapper>\n      {/* @ts-ignore NOTE: need update react types without it */}\n      <DatePicker\n        {...props}\n        ref={datePickerRef}\n        locale={language}\n        selected={selected}\n        required={inputProps?.required}\n        onChange={date => {\n          onChange(date!);\n        }}\n        customInput={\n          <CustomInput\n            {...inputProps}\n            onClick={() => datePickerRef.current?.setOpen(true)}\n            date={\n              dateFormatter != null\n                ? dateFormatter(selected!, language)\n                : formatDateByLanguage(selected!, language)\n            }\n          />\n        }\n        renderCustomHeader={({\n          date,\n          decreaseMonth,\n          increaseMonth,\n          // https://reactdatepicker.com/#example-custom-header\n        }) => (\n          <HeaderWrapper>\n            <HeaderButton type=\"button\" onClick={decreaseMonth}>\n              <Icon.ChevronLeftSmall color={color['main-black']} />\n            </HeaderButton>\n            <HeaderText>\n              <span>{MONTHS[date.getMonth()]}</span>\n              <span> {date.getFullYear()}</span>\n            </HeaderText>\n            <HeaderButton type=\"button\" onClick={increaseMonth}>\n              <Icon.ChevronRightSmall color={color['main-black']} />\n            </HeaderButton>\n          </HeaderWrapper>\n        )}\n      />\n    </DatepickerWrapper>\n  );\n}\n\nexport interface CustomInputProps extends DateInputProps {\n  onClick: MouseEventHandler<HTMLInputElement>;\n  date?: string;\n}\n\nexport const CustomInput = forwardRef(\n  ({ onClick, date, ...props }: CustomInputProps, ref: LegacyRef<HTMLDivElement>) => (\n    <div ref={ref}>\n      <DateInput {...props} onClick={onClick} value={date ?? ''} />\n    </div>\n  ),\n);\n\nexport const DatepickerWrapper = styled.div<{ monthContainerPadding?: string }>`\n  & .react-datepicker-wrapper {\n    width: 100%;\n  }\n  & .react-datepicker-popper {\n    z-index: 1000;\n    margin-top: 10px;\n    & .react-datepicker {\n      background-color: ${color.white};\n      border: none;\n      border-radius: 8px;\n      overflow: hidden;\n      /* prettier-ignore */\n      box-shadow: 0px 0px 1px 0px rgba(132, 132, 132, 0.31),\n      0px 2px 5px 0px rgba(70, 70, 70, 0.2);\n\n      //navigation button\n      & .react-datepicker__navigation {\n        display: none;\n      }\n\n      // calendar header\n      & .react-datepicker__header {\n        background-color: ${color.white};\n        border-bottom: none;\n        padding: 0;\n      }\n      & .react-datepicker__aria-live {\n        display: none;\n      }\n\n      // container\n      & .react-datepicker__month {\n        margin: 0;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        gap: 3px;\n      }\n      & .react-datepicker__month-container {\n        padding: ${({ monthContainerPadding }) => monthContainerPadding ?? '20px 16px 20px 16px'};\n      }\n\n      & .react-datepicker__day-names {\n        width: 242px;\n        height: 30px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        gap: 3px;\n        margin: 0 0 3px 0;\n      }\n\n      & .react-datepicker__week {\n        display: flex;\n        gap: 3px;\n        align-items: center;\n        justify-content: center;\n        height: 32px;\n      }\n\n      // days\n      & .react-datepicker__day-name {\n        display: flex;\n        width: 32px;\n        height: 30px;\n        align-items: center;\n        justify-content: center;\n        color: ${color['grey-70']};\n\n        /* B5 */\n        font-size: 12px;\n        font-weight: 400;\n        line-height: normal;\n        margin: 0;\n        &:first-of-type {\n          // sunday\n          color: ${color['error-20']};\n        }\n        &:last-of-type {\n          // saturday\n          color: ${color['error-20']};\n        }\n      }\n\n      & .react-datepicker__day {\n        cursor: pointer;\n        width: 32px;\n        height: 32px;\n        margin: 0;\n        font-size: 12px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: ${color['grey-70']};\n        &:hover {\n          background-color: ${color['grey-20']};\n          border-radius: 6px;\n        }\n      }\n      & .react-datepicker__day--keyboard-selected {\n        background-color: ${color.white}; //essential to delete default blue background color from react-datepicker\n      }\n      & .react-datepicker__day--today {\n        font-weight: 700;\n        color: ${color['main-black']};\n      }\n      & .react-datepicker__day--weekend {\n        color: ${color['error-20']};\n      }\n      & .react-datepicker__day--outside-month {\n        color: ${color['grey-50']};\n      }\n      & .react-datepicker__day--selected {\n        width: 32px;\n        height: 32px;\n        border-radius: 6px !important;\n        background-color: ${color['main-black']} !important;\n        color: ${color.white};\n      }\n      & .react-datepicker__day--disabled {\n        cursor: default;\n        color: ${color['grey-40']};\n        &:hover {\n          background-color: ${color.white};\n        }\n      }\n    }\n\n    // time\n    & .react-datepicker-time__input {\n      width: 100%;\n      margin: 0;\n    }\n    & .react-datepicker-time__caption {\n      display: none;\n    }\n    & .react-datepicker__input-time-container {\n      width: 100%;\n      height: auto;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      margin: 0;\n      padding: 0 16px 20px 16px;\n    }\n  }\n`;\n\n// calendar header for showing in english whatever language is selected\nexport const HeaderWrapper = styled.span`\n  width: 242px;\n  height: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 13px;\n  font-weight: 500;\n  margin: 0 0 18px 0;\n  color: ${color['grey-80']};\n  line-height: 20px;\n`;\nexport const HeaderText = styled.span`\n  width: auto;\n  display: flex;\n  gap: 10px;\n`;\nexport const HeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  padding: 0;\n`;\n"],"names":["SingleDate","selected","onChange","language","inputProps","dateFormatter","props","datePickerRef","useRef","DatepickerWrapper","jsx","DatePicker","date","CustomInput","_a","formatDateByLanguage","decreaseMonth","increaseMonth","HeaderWrapper","HeaderButton","Icon","color","HeaderText","MONTHS","forwardRef","onClick","ref","DateInput","styled","monthContainerPadding"],"mappings":"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"}