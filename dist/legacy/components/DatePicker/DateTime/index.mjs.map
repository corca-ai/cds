{"version":3,"file":"index.mjs","sources":["../../../../../src/legacy/components/DatePicker/DateTime/index.tsx"],"sourcesContent":["import { useRef, useState } from 'react';\nimport DatePicker from 'react-datepicker';\n\nimport { formatDateTimeByLanguage } from '../../../utils/date';\nimport Icon from '../../Icon';\nimport { color } from '../../styles';\nimport {\n  CustomInput,\n  DatePickerProps,\n  DatepickerWrapper,\n  HeaderButton,\n  HeaderText,\n  HeaderWrapper,\n} from '../SingleDate';\nimport { MONTHS } from '../constant';\nimport { CustomTimeInput } from './CustomTimeInput';\nexport * from './CustomTimeInput';\n\nexport function DateTime({\n  selected,\n  onChange,\n  language,\n  inputProps,\n  dateFormatter,\n  ...props\n}: DatePickerProps) {\n  const [newDate, setNewDate] = useState<Date | null>(selected || new Date());\n  const datePickerRef = useRef<DatePicker>(null);\n\n  return (\n    <DatepickerWrapper monthContainerPadding=\"20px 16px 18px 16px\">\n      {/* @ts-ignore NOTE: need update react types without it*/}\n      <DatePicker\n        {...props}\n        ref={datePickerRef}\n        locale={language}\n        selected={newDate}\n        onChange={date => setNewDate(date)}\n        required={inputProps?.required}\n        customInput={\n          <CustomInput\n            {...inputProps}\n            onClick={() => datePickerRef.current?.setOpen(true)}\n            date={\n              dateFormatter\n                ? dateFormatter(selected!, language)\n                : formatDateTimeByLanguage(selected!, language)\n            }\n          />\n        }\n        showTimeInput\n        customTimeInput={\n          <CustomTimeInput\n            setNewDate={(date: Date) => setNewDate(date)}\n            newDate={newDate!}\n            language={language}\n            onConfirm={() => {\n              // onConfirm Button is located here because of style customizing\n              onChange(newDate!);\n              datePickerRef.current?.setOpen(false);\n            }}\n          />\n        }\n        timeCaption=\"\"\n        shouldCloseOnSelect={false}\n        renderCustomHeader={({\n          date,\n          decreaseMonth,\n          increaseMonth,\n          // https://reactdatepicker.com/#example-custom-header\n        }) => (\n          <HeaderWrapper>\n            <HeaderButton type=\"button\" onClick={decreaseMonth}>\n              <Icon.ChevronLeftSmall color={color['main-black']} />\n            </HeaderButton>\n            <HeaderText>\n              <span>{MONTHS[date.getMonth()]}</span>\n              <span> {date.getFullYear()}</span>\n            </HeaderText>\n            <HeaderButton type=\"button\" onClick={increaseMonth}>\n              <Icon.ChevronRightSmall color={color['main-black']} />\n            </HeaderButton>\n          </HeaderWrapper>\n        )}\n      />\n    </DatepickerWrapper>\n  );\n}\n"],"names":["DateTime","selected","onChange","language","inputProps","dateFormatter","props","newDate","setNewDate","useState","datePickerRef","useRef","jsx","DatepickerWrapper","DatePicker","date","CustomInput","_a","formatDateTimeByLanguage","CustomTimeInput","decreaseMonth","increaseMonth","HeaderWrapper","HeaderButton","Icon","color","HeaderText","MONTHS"],"mappings":";;;;;;;;;;AAkBO,SAASA,EAAS;AAAA,EACvB,UAAAC;AAAA,EACA,UAAAC;AAAA,EACA,UAAAC;AAAA,EACA,YAAAC;AAAA,EACA,eAAAC;AAAA,EACA,GAAGC;AACL,GAAoB;AACZ,QAAA,CAACC,GAASC,CAAU,IAAIC,EAAsBR,KAAY,oBAAI,MAAM,GACpES,IAAgBC,EAAmB,IAAI;AAG3C,SAAA,gBAAAC,EAACC,GAAkB,EAAA,uBAAsB,uBAEvC,UAAA,gBAAAD;AAAA,IAACE;AAAAA,IAAA;AAAA,MACE,GAAGR;AAAA,MACJ,KAAKI;AAAA,MACL,QAAQP;AAAA,MACR,UAAUI;AAAA,MACV,UAAU,CAAQQ,MAAAP,EAAWO,CAAI;AAAA,MACjC,UAAUX,KAAA,gBAAAA,EAAY;AAAA,MACtB,aACE,gBAAAQ;AAAA,QAACI;AAAA,QAAA;AAAA,UACE,GAAGZ;AAAA,UACJ,SAAS,MAAA;;AAAM,oBAAAa,IAAAP,EAAc,YAAd,gBAAAO,EAAuB,QAAQ;AAAA;AAAA,UAC9C,MACEZ,IACIA,EAAcJ,GAAWE,CAAQ,IACjCe,EAAyBjB,GAAWE,CAAQ;AAAA,QAAA;AAAA,MAEpD;AAAA,MAEF,eAAa;AAAA,MACb,iBACE,gBAAAS;AAAA,QAACO;AAAA,QAAA;AAAA,UACC,YAAY,CAACJ,MAAeP,EAAWO,CAAI;AAAA,UAC3C,SAAAR;AAAA,UACA,UAAAJ;AAAA,UACA,WAAW,MAAM;;AAEf,YAAAD,EAASK,CAAQ,IACHU,IAAAP,EAAA,YAAA,QAAAO,EAAS,QAAQ;AAAA,UACjC;AAAA,QAAA;AAAA,MACF;AAAA,MAEF,aAAY;AAAA,MACZ,qBAAqB;AAAA,MACrB,oBAAoB,CAAC;AAAA,QACnB,MAAAF;AAAA,QACA,eAAAK;AAAA,QACA,eAAAC;AAAA;AAAA,MAAA,wBAGCC,GACC,EAAA,UAAA;AAAA,QAAA,gBAAAV,EAACW,GAAa,EAAA,MAAK,UAAS,SAASH,GACnC,UAAA,gBAAAR,EAACY,EAAK,kBAAL,EAAsB,OAAOC,EAAM,YAAY,EAAG,CAAA,GACrD;AAAA,0BACCC,GACC,EAAA,UAAA;AAAA,UAAA,gBAAAd,EAAC,QAAM,EAAA,UAAAe,EAAOZ,EAAK,SAAU,CAAA,GAAE;AAAA,4BAC9B,QAAK,EAAA,UAAA;AAAA,YAAA;AAAA,YAAEA,EAAK,YAAY;AAAA,UAAA,GAAE;AAAA,QAAA,GAC7B;AAAA,QACC,gBAAAH,EAAAW,GAAA,EAAa,MAAK,UAAS,SAASF,GACnC,UAAA,gBAAAT,EAACY,EAAK,mBAAL,EAAuB,OAAOC,EAAM,YAAY,EAAG,CAAA,GACtD;AAAA,MAAA,GACF;AAAA,IAAA;AAAA,EAGN,EAAA,CAAA;AAEJ;"}