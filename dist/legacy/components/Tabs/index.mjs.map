{"version":3,"file":"index.mjs","sources":["../../../../src/legacy/components/Tabs/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { B3 } from '../Text';\nimport { color } from '../styles';\n\nconst Container = styled.div`\n  display: inline-block;\n  overflow-x: auto;\n`;\n\nconst Contents = styled.div`\n  width: fit-content;\n  display: flex;\n  align-items: flex-end;\n  border-bottom: 2px solid ${color['grey-50']};\n`;\n\nconst Item = styled.div`\n  display: flex;\n  border-radius: 4px 4px 0px 0px;\n  padding: 11px 12px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nconst SelectedTab = styled(Item)`\n  border-bottom: 2px solid ${color['main-black']};\n  margin-bottom: -2px;\n`;\n\nconst NotSelectedTab = styled(Item)`\n  &:hover {\n    background-color: ${color['grey-10']};\n  }\n  cursor: pointer;\n`;\n\ninterface TabItem {\n  label: string;\n  value: string;\n}\n\nexport interface TabsProps {\n  onChange: (v: string) => void;\n  selectedTab: string;\n  items: TabItem[];\n  tabWidth?: number;\n  tabFullWidth?: boolean;\n}\n\nexport function Tabs({ items, onChange, selectedTab, tabWidth = 74, tabFullWidth }: TabsProps) {\n  return (\n    <Container style={{ width: '100%' }}>\n      <Contents style={{ minWidth: '100%' }}>\n        {items.map((tab, i) => {\n          const selected = tab.value === selectedTab;\n          const Component = selected ? SelectedTab : NotSelectedTab;\n          const color = selected ? 'main-black' : 'grey-60';\n          return (\n            <Component\n              onClick={() => {\n                onChange(tab.value);\n              }}\n              key={i}\n              aria-selected={selected ? 'true' : 'false'}\n              style={{\n                width: tabFullWidth ? `${100 / items.length}%` : tabWidth,\n              }}\n            >\n              <B3 ellipsis={true} c={color}>\n                {tab.label}\n              </B3>\n            </Component>\n          );\n        })}\n      </Contents>\n    </Container>\n  );\n}\n"],"names":["Container","styled","Contents","color","Item","SelectedTab","NotSelectedTab","Tabs","items","onChange","selectedTab","tabWidth","tabFullWidth","jsx","tab","i","selected","Component","B3"],"mappings":";;;;AAKA,MAAMA,IAAYC,EAAO;AAAA;AAAA;AAAA,GAKnBC,IAAWD,EAAO;AAAA;AAAA;AAAA;AAAA,6BAIKE,EAAM,SAAS,CAAC;AAAA,GAGvCC,IAAOH,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASdI,IAAcJ,EAAOG,CAAI;AAAA,6BACFD,EAAM,YAAY,CAAC;AAAA;AAAA,GAI1CG,IAAiBL,EAAOG,CAAI;AAAA;AAAA,wBAEVD,EAAM,SAAS,CAAC;AAAA;AAAA;AAAA;AAkBxB,SAAAI,EAAK,EAAE,OAAAC,GAAO,UAAAC,GAAU,aAAAC,GAAa,UAAAC,IAAW,IAAI,cAAAC,KAA2B;AAC7F,2BACGZ,GAAU,EAAA,OAAO,EAAE,OAAO,OAAA,GACzB,UAAC,gBAAAa,EAAAX,GAAA,EAAS,OAAO,EAAE,UAAU,UAC1B,YAAM,IAAI,CAACY,GAAKC,MAAM;AACf,UAAAC,IAAWF,EAAI,UAAUJ,GACzBO,IAAYD,IAAWX,IAAcC,GACrCH,IAAQa,IAAW,eAAe;AAEtC,WAAA,gBAAAH;AAAA,MAACI;AAAA,MAAA;AAAA,QACC,SAAS,MAAM;AACb,UAAAR,EAASK,EAAI,KAAK;AAAA,QACpB;AAAA,QAEA,iBAAeE,IAAW,SAAS;AAAA,QACnC,OAAO;AAAA,UACL,OAAOJ,IAAe,GAAG,MAAMJ,EAAM,MAAM,MAAMG;AAAA,QACnD;AAAA,QAEA,4BAACO,GAAG,EAAA,UAAU,IAAM,GAAGf,GACpB,YAAI,MACP,CAAA;AAAA,MAAA;AAAA,MARKY;AAAA,IAAA;AAAA,EASP,CAEH,GACH,EACF,CAAA;AAEJ;"}