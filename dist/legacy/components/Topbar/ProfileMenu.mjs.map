{"version":3,"file":"ProfileMenu.mjs","sources":["../../../../src/legacy/components/Topbar/ProfileMenu.tsx"],"sourcesContent":["import { type ReactElement, type ReactNode, useEffect, useRef, useState } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport Icon from '../Icon';\nimport { B1, B2, B3, B4, B5 } from '../Text';\nimport { color } from '../styles';\nimport { IconProps } from '../Icon/type';\n\nexport interface ProfileProps {\n  avatar?: string;\n  name: string;\n  description?: string;\n}\n\nexport interface ProfileOption {\n  label: string;\n  onClick: () => void;\n  icon: (icon: IconProps) => ReactElement;\n}\n\nexport interface ProfileOptionListProps {\n  title: ReactNode;\n  name: string;\n  email: string;\n  options?: ProfileOption[];\n}\n\nexport type ProfileMenuProps = ProfileProps & ProfileOptionListProps;\n\nconst Container = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst ProfileContainer = styled.div<{ clicked?: boolean }>`\n  display: inline-flex;\n  padding: 8px 14px 8px 13px;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 18px;\n  border-radius: 50px;\n  background: ${color.white};\n  box-shadow: ${({ clicked }) => clicked && `0 0 0 1.5px ${color['grey-30']} inset,`} 0px 4px 10px\n    0px rgba(0, 0, 0, 0.05);\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst AvatarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n`;\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  min-width: 86px;\n  span:last-child {\n    line-height: 12px;\n  }\n`;\n\nconst DropdownButton = styled.div<{ clicked?: boolean }>`\n  width: 20px;\n  height: 20px;\n  margin: auto;\n  flex-shrink: 0;\n  cursor: pointer;\n  transform: ${({ clicked }) => (clicked ? 'rotate(-180deg);' : 'rotate(0);')};\n`;\n\nconst Image = styled.div<{ url?: string }>`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  object-fit: cover;\n  background-image: url(${({ url }) => url});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-color: #7a7a7a;\n`;\n\nconst MenuProfileContainer = styled.div`\n  width: 100%;\n  padding: 6px 10px 10px 10px;\n  background: ${color.white};\n  box-shadow: 0px 4px 10px 0px rgba(0, 0, 0, 0.05);\n  border-radius: 8px;\n`;\n\nconst ClientDataWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  padding: 0 8px;\n  * {\n    line-height: normal;\n  }\n`;\nconst MenuDivider = styled.hr`\n  border-width: 0px 0px thin;\n  border-style: solid;\n  border-color: ${color['grey-30']};\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  margin-top: 16px;\n`;\n\nconst MenuWrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 4px;\n`;\n\nconst MenuButton = styled.button`\n  background: inherit;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n`;\n\nconst MenuItem = styled.li`\n  display: flex;\n  gap: 6px;\n  padding: 6px 8px;\n  align-items: center;\n  border-radius: 8px;\n  &:hover {\n    background: ${color['grey-20']};\n  }\n  &:active {\n    background: ${color['grey-30']};\n  }\n`;\n\nconst TitleWrapper = styled.div`\n  height: 32px;\n  padding-top: 12px;\n`;\n\nconst OptionWrapper = styled.div`\n  position: absolute;\n  z-index: 1000;\n  margin-top: 9px;\n  right: 0;\n  min-width: 100%;\n`;\n\nconst InfoName = styled.div`\n  height: 21px;\n  display: flex;\n  align-items: center;\n`;\n\nfunction ProfileOptionList({ title, name, email, options }: ProfileOptionListProps) {\n  return (\n    <MenuProfileContainer>\n      <ClientDataWrapper>\n        <TitleWrapper>\n          <B4>{title}</B4>\n        </TitleWrapper>\n        <B1>{name}</B1>\n        <B3>{email}</B3>\n      </ClientDataWrapper>\n      <MenuWrapper>\n        <MenuDivider />\n        {options?.map(menu => {\n          const Icon = menu.icon;\n          return (\n            <MenuButton key={menu.label} onClick={menu.onClick}>\n              <MenuItem>\n                <Icon />\n                <B3>{menu.label}</B3>\n              </MenuItem>\n            </MenuButton>\n          );\n        })}\n      </MenuWrapper>\n    </MenuProfileContainer>\n  );\n}\n\nfunction Profile({\n  avatar,\n  name,\n  description,\n  onClick,\n  clicked,\n}: {\n  avatar?: string;\n  name: string;\n  description?: string;\n  onClick: () => void;\n  clicked: boolean;\n}) {\n  return (\n    <ProfileContainer clicked={clicked}>\n      <Wrapper>\n        <AvatarWrapper>\n          <Image {...(avatar && { url: avatar })} />\n          <Info>\n            <InfoName>\n              <B2>{name}</B2>\n            </InfoName>\n            <B5 c=\"grey-60\">{description}</B5>\n          </Info>\n        </AvatarWrapper>\n        <DropdownButton clicked={clicked} onClick={onClick}>\n          <Icon.ChevronDownSmall />\n        </DropdownButton>\n      </Wrapper>\n    </ProfileContainer>\n  );\n}\n\nexport function ProfileMenu({ avatar, name, description, ...optionListProps }: ProfileMenuProps) {\n  const [showMenu, setShowMenu] = useState(false);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (wrapperRef.current != null && !wrapperRef.current.contains(event.target as Node)) {\n        setShowMenu(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  return (\n    <Container ref={wrapperRef}>\n      <Profile\n        avatar={avatar}\n        name={name}\n        {...(description && { description })}\n        onClick={() => {\n          setShowMenu(!showMenu);\n        }}\n        clicked={showMenu}\n      />\n      <OptionWrapper>\n        {showMenu && <ProfileOptionList name={name} {...optionListProps} />}\n      </OptionWrapper>\n    </Container>\n  );\n}\n"],"names":["Container","styled","ProfileContainer","color","clicked","Wrapper","AvatarWrapper","Info","DropdownButton","Image","url","MenuProfileContainer","ClientDataWrapper","MenuDivider","MenuWrapper","MenuButton","MenuItem","TitleWrapper","OptionWrapper","InfoName","ProfileOptionList","title","name","email","options","jsxs","jsx","B4","B1","B3","menu","Icon","Profile","avatar","description","onClick","B2","B5","ProfileMenu","optionListProps","showMenu","setShowMenu","useState","wrapperRef","useRef","useEffect","handleClickOutside","event"],"mappings":"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"}