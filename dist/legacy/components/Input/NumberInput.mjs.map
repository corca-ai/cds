{"version":3,"file":"NumberInput.mjs","sources":["../../../../src/legacy/components/Input/NumberInput.tsx"],"sourcesContent":["import { TextInput, TextInputProps } from './TextInput';\n\nconst getIntegerOrNull = (value: number | string) => {\n  if (value !== '' && isNumber(Number(value))) {\n    return Math.round(Number(value));\n  }\n  return null;\n};\n\nexport type NumberInputProps = Omit<TextInputProps, 'onChange'> & {\n  onChange: (value: number | null) => void;\n};\n\nexport function NumberInput({ value, onChange, onBlur, ...props }: NumberInputProps) {\n  return (\n    <TextInput\n      type=\"number\"\n      value={value ?? ''}\n      onChange={e => onChange(getIntegerOrNull(e.currentTarget.value))}\n      onWheel={e => {\n        e.currentTarget.blur();\n        e.stopPropagation();\n      }}\n      onBlur={onBlur}\n      {...props}\n    />\n  );\n}\n\nfunction isNumber(value: unknown): value is number {\n  return typeof value === 'number' && !isNaN(value);\n}\n"],"names":["getIntegerOrNull","value","isNumber","NumberInput","onChange","onBlur","props","jsx","TextInput","e"],"mappings":";;AAEA,MAAMA,IAAmB,CAACC,MACpBA,MAAU,MAAMC,EAAS,OAAOD,CAAK,CAAC,IACjC,KAAK,MAAM,OAAOA,CAAK,CAAC,IAE1B;AAOF,SAASE,EAAY,EAAE,OAAAF,GAAO,UAAAG,GAAU,QAAAC,GAAQ,GAAGC,KAA2B;AAEjF,SAAA,gBAAAC;AAAA,IAACC;AAAA,IAAA;AAAA,MACC,MAAK;AAAA,MACL,OAAOP,KAAS;AAAA,MAChB,UAAU,CAAKQ,MAAAL,EAASJ,EAAiBS,EAAE,cAAc,KAAK,CAAC;AAAA,MAC/D,SAAS,CAAKA,MAAA;AACZ,QAAAA,EAAE,cAAc,QAChBA,EAAE,gBAAgB;AAAA,MACpB;AAAA,MACA,QAAAJ;AAAA,MACC,GAAGC;AAAA,IAAA;AAAA,EAAA;AAGV;AAEA,SAASJ,EAASD,GAAiC;AACjD,SAAO,OAAOA,KAAU,YAAY,CAAC,MAAMA,CAAK;AAClD;"}