{"version":3,"file":"hook.mjs","sources":["../../../../src/legacy/components/Input/hook.ts"],"sourcesContent":["import { useEffect, type RefObject } from 'react';\n\nconst useClickOutside = (\n  ref: RefObject<HTMLElement>,\n  handler: (event: MouseEvent | TouchEvent) => void,\n) => {\n  useEffect(() => {\n    let startedInside = false;\n    let startedWhenMounted = false;\n\n    const listener = (event: MouseEvent | TouchEvent) => {\n      if (startedInside || !startedWhenMounted) return;\n      if (ref.current == null || ref.current.contains(event.target as Node)) return;\n\n      handler(event);\n    };\n\n    const validateEventStart = (event: MouseEvent | TouchEvent) => {\n      startedWhenMounted = !(ref.current == null);\n      startedInside = !(ref.current == null) && ref.current.contains(event.target as Node);\n    };\n\n    document.addEventListener('mousedown', validateEventStart);\n    document.addEventListener('touchstart', validateEventStart);\n    document.addEventListener('click', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', validateEventStart);\n      document.removeEventListener('touchstart', validateEventStart);\n      document.removeEventListener('click', listener);\n    };\n  }, [ref, handler]);\n};\n\nexport default useClickOutside;\n"],"names":["useClickOutside","ref","handler","useEffect","startedInside","startedWhenMounted","listener","event","validateEventStart"],"mappings":";AAEM,MAAAA,IAAkB,CACtBC,GACAC,MACG;AACH,EAAAC,EAAU,MAAM;AACd,QAAIC,IAAgB,IAChBC,IAAqB;AAEnB,UAAAC,IAAW,CAACC,MAAmC;AACnD,MAAIH,KAAiB,CAACC,KAClBJ,EAAI,WAAW,QAAQA,EAAI,QAAQ,SAASM,EAAM,MAAc,KAEpEL,EAAQK,CAAK;AAAA,IAAA,GAGTC,IAAqB,CAACD,MAAmC;AACxC,MAAAF,IAAEJ,EAAI,WAAW,MACtBG,IAAEH,EAAI,WAAW,QAASA,EAAI,QAAQ,SAASM,EAAM,MAAc;AAAA,IAAA;AAG5E,oBAAA,iBAAiB,aAAaC,CAAkB,GAChD,SAAA,iBAAiB,cAAcA,CAAkB,GACjD,SAAA,iBAAiB,SAASF,CAAQ,GAEpC,MAAM;AACF,eAAA,oBAAoB,aAAaE,CAAkB,GACnD,SAAA,oBAAoB,cAAcA,CAAkB,GACpD,SAAA,oBAAoB,SAASF,CAAQ;AAAA,IAAA;AAAA,EAChD,GACC,CAACL,GAAKC,CAAO,CAAC;AACnB;"}