{"version":3,"file":"PasswordInput.mjs","sources":["../../../../src/legacy/components/Input/PasswordInput.tsx"],"sourcesContent":["import { forwardRef, useMemo, useState } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport { BaseInput, type InputBaseProps, InputContainer } from './InputContainer';\nimport Icon from '../Icon';\nimport { color } from '../styles';\n\nexport type PasswordInputProps = Omit<InputBaseProps, 'children'>;\n\nexport const PasswordInput = forwardRef<HTMLInputElement, PasswordInputProps>(\n  (\n    {\n      label,\n      placeholder,\n      description,\n      name,\n      value,\n      error,\n      disabled,\n      onChange,\n      defaultValue,\n      required = false,\n      width,\n      tooltip,\n      ...props\n    },\n    ref,\n  ) => {\n    const inputStyle = useMemo(() => {\n      return {\n        color: disabled ? color['grey-50'] : color['grey-60'],\n        size: 18,\n      };\n    }, [disabled]);\n\n    const [showPassword, setShowPassword] = useState<boolean>(false);\n    const toggleShowPassword = () => {\n      setShowPassword(!showPassword);\n    };\n\n    return (\n      <InputContainer\n        label={label}\n        description={description}\n        required={required}\n        error={error}\n        width={width}\n        tooltip={tooltip}\n        rightSection={\n          <PasswordInputIcon aria-hidden=\"true\" onMouseDown={toggleShowPassword}>\n            {showPassword ? <Icon.Eye {...inputStyle} /> : <Icon.EyeClosed {...inputStyle} />}\n          </PasswordInputIcon>\n        }\n        {...props}\n      >\n        <BaseInput\n          name={name}\n          value={value}\n          placeholder={placeholder}\n          onChange={onChange}\n          defaultValue={defaultValue}\n          disabled={disabled}\n          error={error}\n          type={showPassword ? 'text' : 'password'}\n          {...props}\n          ref={ref}\n        />\n      </InputContainer>\n    );\n  },\n);\n\nconst PasswordInputIcon = styled.button`\n  margin: auto;\n  background: inherit;\n  border: none;\n  overflow: visible;\n  height: 100%;\n  cursor: pointer;\n  display: flex;\n`;\n"],"names":["PasswordInput","forwardRef","label","placeholder","description","name","value","error","disabled","onChange","defaultValue","required","width","tooltip","props","ref","inputStyle","useMemo","color","showPassword","setShowPassword","useState","jsx","InputContainer","PasswordInputIcon","Icon","BaseInput","styled"],"mappings":";;;;;;AAUO,MAAMA,IAAgBC;AAAA,EAC3B,CACE;AAAA,IACE,OAAAC;AAAA,IACA,aAAAC;AAAA,IACA,aAAAC;AAAA,IACA,MAAAC;AAAA,IACA,OAAAC;AAAA,IACA,OAAAC;AAAA,IACA,UAAAC;AAAA,IACA,UAAAC;AAAA,IACA,cAAAC;AAAA,IACA,UAAAC,IAAW;AAAA,IACX,OAAAC;AAAA,IACA,SAAAC;AAAA,IACA,GAAGC;AAAA,KAELC,MACG;AACG,UAAAC,IAAaC,EAAQ,OAClB;AAAA,MACL,OAAOT,IAAWU,EAAM,SAAS,IAAIA,EAAM,SAAS;AAAA,MACpD,MAAM;AAAA,IAAA,IAEP,CAACV,CAAQ,CAAC,GAEP,CAACW,GAAcC,CAAe,IAAIC,EAAkB,EAAK;AAM7D,WAAA,gBAAAC;AAAA,MAACC;AAAA,MAAA;AAAA,QACC,OAAArB;AAAA,QACA,aAAAE;AAAA,QACA,UAAAO;AAAA,QACA,OAAAJ;AAAA,QACA,OAAAK;AAAA,QACA,SAAAC;AAAA,QACA,gCACGW,GAAkB,EAAA,eAAY,QAAO,aAbjB,MAAM;AAC/B,UAAAJ,EAAgB,CAACD,CAAY;AAAA,QAAA,GAatB,cAAgB,gBAAAG,EAAAG,EAAK,KAAL,EAAU,GAAGT,EAAY,CAAA,IAAK,gBAAAM,EAACG,EAAK,WAAL,EAAgB,GAAGT,EAAY,CAAA,GACjF;AAAA,QAED,GAAGF;AAAA,QAEJ,UAAA,gBAAAQ;AAAA,UAACI;AAAA,UAAA;AAAA,YACC,MAAArB;AAAA,YACA,OAAAC;AAAA,YACA,aAAAH;AAAA,YACA,UAAAM;AAAA,YACA,cAAAC;AAAA,YACA,UAAAF;AAAA,YACA,OAAAD;AAAA,YACA,MAAMY,IAAe,SAAS;AAAA,YAC7B,GAAGL;AAAA,YACJ,KAAAC;AAAA,UAAA;AAAA,QACF;AAAA,MAAA;AAAA,IAAA;AAAA,EAGN;AACF,GAEMS,IAAoBG,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}