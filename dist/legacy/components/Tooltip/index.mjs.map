{"version":3,"file":"index.mjs","sources":["../../../../src/legacy/components/Tooltip/index.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport { PropsWithChildren, ReactElement } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport { color, typography } from '../styles';\nimport { B5 } from '../Text';\n\nexport type Placement = 'top' | 'bottom' | 'left' | 'right';\nexport type Position = 'start' | 'end' | 'center';\n\nexport type TooltipDirection = `${Placement}-${Position}`;\n\nexport interface TooltipProps {\n  direction?: TooltipDirection;\n  withArrow?: boolean;\n  content: string | ReactElement;\n}\n\ntype Split<S extends string> = S extends `${infer T}-${infer U}` ? [T, U] : [S];\n\nexport function Tooltip({\n  direction = 'top-center',\n  withArrow = true,\n  children,\n  content,\n}: PropsWithChildren<TooltipProps>) {\n  const [placement, position] = direction.split('-') as Split<typeof direction>;\n\n  return (\n    <TooltipContainer>\n      <ContentsWrapper>{children}</ContentsWrapper>\n      <TooltipWrapper className=\"tooltip-box\">\n        {withArrow && <TooltipArrow placement={placement} />}\n        <TooltipBubble withArrow={withArrow} placement={placement} position={position}>\n          <B5 c=\"white\">{content}</B5>\n        </TooltipBubble>\n      </TooltipWrapper>\n    </TooltipContainer>\n  );\n}\n\nconst TooltipContainer = styled.div`\n  position: relative;\n  &:hover {\n    .tooltip-box {\n      visibility: visible;\n      opacity: 1;\n    }\n  }\n`;\n\nconst TooltipWrapper = styled.div`\n  visibility: hidden;\n  opacity: 0;\n`;\n\nconst ContentsWrapper = styled.div`\n  display: flex;\n`;\n\nconst TOOLTIP_ARROW_WIDTH = 10;\nconst ARROW_DIAGONAL = Math.sqrt(TOOLTIP_ARROW_WIDTH ** 2 + TOOLTIP_ARROW_WIDTH ** 2);\nconst DISTANCE_FROM_CONTENT_TO_ARROW = 2;\n\nconst getArrowMixin = (placement: Placement) => {\n  const BORDER_ARROW_RADIUS = 2;\n\n  const DISTANCE_ARROW_DESCENDED_LENGTH = (ARROW_DIAGONAL - TOOLTIP_ARROW_WIDTH) / 2;\n  const DISTANCE_ARROW_TO_ELEMENT =\n    DISTANCE_ARROW_DESCENDED_LENGTH + DISTANCE_FROM_CONTENT_TO_ARROW;\n\n  switch (placement) {\n    case 'bottom':\n      return css`\n        border-bottom-right-radius: ${BORDER_ARROW_RADIUS}px;\n        bottom: calc(100% + ${DISTANCE_ARROW_TO_ELEMENT}px);\n        left: calc(50% - ${TOOLTIP_ARROW_WIDTH / 2}px);\n      `;\n    case 'top':\n      return css`\n        border-top-left-radius: ${BORDER_ARROW_RADIUS}px;\n        top: calc(100% + ${DISTANCE_ARROW_TO_ELEMENT}px);\n        left: calc(50% - ${TOOLTIP_ARROW_WIDTH / 2}px);\n      `;\n    case 'left':\n      return css`\n        border-top-right-radius: ${BORDER_ARROW_RADIUS}px;\n        right: calc(100% + ${DISTANCE_ARROW_TO_ELEMENT}px);\n        top: 50%;\n        transform: translateY(-50%) rotate(45deg);\n      `;\n    case 'right':\n      return css`\n        border-bottom-left-radius: ${BORDER_ARROW_RADIUS}px;\n        left: calc(100% + ${DISTANCE_ARROW_TO_ELEMENT}px);\n        top: 50%;\n        transform: translateY(-50%) rotate(45deg);\n      `;\n    default:\n      return null;\n  }\n};\n\nconst TooltipArrow = styled.div<{ placement: Placement }>`\n  position: absolute;\n  background: ${color['main-black']};\n  width: ${TOOLTIP_ARROW_WIDTH}px;\n  height: ${TOOLTIP_ARROW_WIDTH}px;\n  transform: rotate(45deg);\n  z-index: 10;\n  ${props => getArrowMixin(props.placement)}\n`;\n\ntype BubbleProps = {\n  placement: Placement;\n  position?: Position;\n  withArrow?: boolean;\n};\n\nconst getBubbleMixin = ({ withArrow, placement, position }: BubbleProps) => {\n  const ARROW_OFFSET = `calc(100% + ${ARROW_DIAGONAL / 2 + DISTANCE_FROM_CONTENT_TO_ARROW}px)`;\n\n  const TOP_BOTTOM_STYLE = css`\n    left: 50%;\n    transform: ${calculateBubbleTranslate({ placement, position, withArrow })};\n  `;\n  const LEFT_RIGHT_STYLE = css`\n    top: 50%;\n    transform: ${calculateBubbleTranslate({ placement, position, withArrow })};\n  `;\n\n  switch (placement) {\n    case 'top':\n      return css`\n        top: ${ARROW_OFFSET};\n        ${TOP_BOTTOM_STYLE}\n      `;\n    case 'bottom':\n      return css`\n        bottom: ${ARROW_OFFSET};\n        ${TOP_BOTTOM_STYLE}\n      `;\n    case 'left':\n      return css`\n        right: 100%;\n        ${LEFT_RIGHT_STYLE}\n      `;\n    case 'right':\n      return css`\n        left: 100%;\n        ${LEFT_RIGHT_STYLE}\n      `;\n    default:\n      return null;\n  }\n};\n\nconst mainAxis = (forward: boolean, threshold: number, offset: number) => {\n  if (forward) {\n    return `${offset - threshold}px`;\n  }\n  return `${threshold - offset}px`;\n};\n\nconst crossAxis = (position?: Position, diff?: number) => {\n  switch (position) {\n    case 'center':\n      return '-50%';\n    case 'start':\n      return `-${diff}px`;\n    case 'end':\n      return `calc(${diff}px - 100%)`;\n    default:\n      return '0%';\n  }\n};\n\nconst calculateBubbleTranslate = ({ placement, position, withArrow }: BubbleProps): string => {\n  const TOP_BOTTOM_ARROW_DISTANCE = 15;\n  const LEFT_RIGHT_ARROW_DISTANCE = 9;\n\n  const VERT_ARROW_OFFSET = ARROW_DIAGONAL + TOP_BOTTOM_ARROW_DISTANCE;\n  const HORI_ARROW_OFFSET = ARROW_DIAGONAL + LEFT_RIGHT_ARROW_DISTANCE;\n\n  const DISTANCE_FROM_CONTENT = TOOLTIP_ARROW_WIDTH - DISTANCE_FROM_CONTENT_TO_ARROW;\n  const offset = withArrow ? 0 : DISTANCE_FROM_CONTENT;\n\n  function TopOrBottom() {\n    const translateY = mainAxis(placement === 'bottom', 0, offset);\n    const translateX = crossAxis(position, VERT_ARROW_OFFSET);\n    return `translate(${translateX}, ${translateY})`;\n  }\n\n  function LeftOrRight() {\n    const threshold = ARROW_DIAGONAL / 2 + DISTANCE_FROM_CONTENT_TO_ARROW;\n    const translateX = mainAxis(placement === 'left', threshold, offset);\n    const translateY = crossAxis(position, HORI_ARROW_OFFSET);\n    return `translate(${translateX}, ${translateY})`;\n  }\n\n  switch (placement) {\n    case 'top':\n    case 'bottom':\n      return TopOrBottom();\n    case 'left':\n    case 'right':\n      return LeftOrRight();\n    default:\n      return '';\n  }\n};\n\nconst TooltipBubble = styled.div<BubbleProps>`\n  position: absolute;\n  z-index: 10;\n  width: max-content;\n  height: max-content;\n  max-width: 300px;\n  cursor: help;\n  background: ${color['main-black']};\n  font-size: ${typography.size.xxs}px;\n  font-weight: ${typography.weight.regular};\n  padding: 7px 10px;\n  border-radius: 8px;\n  white-space: pre-wrap;\n  word-break: break-all;\n  line-height: normal;\n\n  ${props => getBubbleMixin(props)}\n`;\n"],"names":["Tooltip","direction","withArrow","children","content","placement","position","TooltipContainer","jsx","ContentsWrapper","jsxs","TooltipWrapper","TooltipArrow","TooltipBubble","B5","styled","TOOLTIP_ARROW_WIDTH","ARROW_DIAGONAL","DISTANCE_FROM_CONTENT_TO_ARROW","getArrowMixin","DISTANCE_ARROW_TO_ELEMENT","css","color","props","getBubbleMixin","ARROW_OFFSET","TOP_BOTTOM_STYLE","calculateBubbleTranslate","LEFT_RIGHT_STYLE","mainAxis","forward","threshold","offset","crossAxis","diff","VERT_ARROW_OFFSET","HORI_ARROW_OFFSET","DISTANCE_FROM_CONTENT","TopOrBottom","translateY","LeftOrRight","translateX","typography"],"mappings":"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"}