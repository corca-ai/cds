{"version":3,"file":"index.mjs","sources":["../../../../src/legacy/components/Toast/index.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport styled from '@emotion/styled';\n\nimport Icon from '../Icon';\nimport { B3, B7 } from '../Text';\nimport { color } from '../styles';\n\nexport const ToastPrepare = () => {\n  return <Toaster />;\n};\n\nexport interface ToastData {\n  title?: string;\n  message: string;\n  durationMs?: number;\n}\n\nconst ToastBase = styled.div`\n  display: flex;\n  width: 420px;\n  padding: 12px;\n  justify-content: space-between;\n  background-color: ${color.white};\n  border-radius: 9px;\n  box-shadow: 0px 0px 1px 0px rgba(132, 132, 132, 0.31), 0px 2px 5px 0px rgba(70, 70, 70, 0.2);\n`;\n\nconst Left = styled.div`\n  display: flex;\n  height: 100%;\n  gap: 8px;\n`;\n\nconst IconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 18px;\n  line-height: 18px;\n`;\n\nconst CloseContainer = styled.div`\n  cursor: pointer;\n  height: 20px;\n  width: 20px;\n`;\n\nconst TitleAndMessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 8px;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  height: 17px;\n  line-height: 17px;\n`;\n\nconst MessageContainer = styled.div`\n  display: flex;\n  height: 100%;\n`;\n\nfunction renderToast(icon: ReactNode, message: ToastData) {\n  toast.custom(\n    t => (\n      <ToastBase>\n        <Left>\n          <IconContainer>{icon}</IconContainer>\n          <TitleAndMessageContainer>\n            {message.title && (\n              <TitleContainer>\n                <B7>{message.title}</B7>\n              </TitleContainer>\n            )}\n            <MessageContainer>\n              <B3>{message.message}</B3>\n            </MessageContainer>\n          </TitleAndMessageContainer>\n        </Left>\n        <CloseContainer\n          onClick={() => {\n            toast.remove(t.id);\n          }}\n        >\n          <Icon.CancelSmall />\n        </CloseContainer>\n      </ToastBase>\n    ),\n    { position: 'top-right', duration: message.durationMs || 3000 },\n  );\n}\n\nexport const Toast = {\n  success: (message: ToastData) => {\n    renderToast(<Icon.ToastSuccess />, message);\n  },\n  error: (message: ToastData) => {\n    renderToast(<Icon.ToastError />, message);\n  },\n};\n"],"names":["ToastPrepare","Toaster","ToastBase","styled","color","Left","IconContainer","CloseContainer","TitleAndMessageContainer","TitleContainer","MessageContainer","renderToast","icon","message","toast","t","jsxs","jsx","B7","B3","Icon","Toast"],"mappings":";;;;;;AASO,MAAMA,IAAe,wBAClBC,GAAQ,CAAA,CAAA,GASZC,IAAYC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKHC,EAAM,KAAK;AAAA;AAAA;AAAA,GAK3BC,IAAOF,EAAO;AAAA;AAAA;AAAA;AAAA,GAMdG,IAAgBH,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQvBI,IAAiBJ,EAAO;AAAA;AAAA;AAAA;AAAA,GAMxBK,IAA2BL,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,GAOlCM,IAAiBN,EAAO;AAAA;AAAA;AAAA;AAAA,GAMxBO,IAAmBP,EAAO;AAAA;AAAA;AAAA;AAKhC,SAASQ,EAAYC,GAAiBC,GAAoB;AAClDC,EAAAA,EAAA;AAAA,IACJ,CAAAC,wBACGb,GACC,EAAA,UAAA;AAAA,MAAA,gBAAAc,EAACX,GACC,EAAA,UAAA;AAAA,QAAA,gBAAAY,EAACX,KAAe,UAAKM,EAAA,CAAA;AAAA,0BACpBJ,GACE,EAAA,UAAA;AAAA,UAAAK,EAAQ,SACN,gBAAAI,EAAAR,GAAA,EACC,4BAACS,GAAI,EAAA,UAAAL,EAAQ,OAAM,EACrB,CAAA;AAAA,4BAEDH,GACC,EAAA,UAAA,gBAAAO,EAACE,GAAI,EAAA,UAAAN,EAAQ,QAAQ,CAAA,GACvB;AAAA,QAAA,GACF;AAAA,MAAA,GACF;AAAA,MACA,gBAAAI;AAAA,QAACV;AAAA,QAAA;AAAA,UACC,SAAS,MAAM;AACPO,YAAAA,EAAA,OAAOC,EAAE,EAAE;AAAA,UACnB;AAAA,UAEA,UAAA,gBAAAE,EAACG,EAAK,aAAL,CAAA,CAAiB;AAAA,QAAA;AAAA,MACpB;AAAA,IAAA,GACF;AAAA,IAEF,EAAE,UAAU,aAAa,UAAUP,EAAQ,cAAc,IAAK;AAAA,EAAA;AAElE;AAEO,MAAMQ,IAAQ;AAAA,EACnB,SAAS,CAACR,MAAuB;AAC/B,IAAAF,EAAa,gBAAAM,EAAAG,EAAK,cAAL,CAAkB,CAAA,GAAIP,CAAO;AAAA,EAC5C;AAAA,EACA,OAAO,CAACA,MAAuB;AAC7B,IAAAF,EAAa,gBAAAM,EAAAG,EAAK,YAAL,CAAgB,CAAA,GAAIP,CAAO;AAAA,EAC1C;AACF;"}