{"version":3,"file":"Th.mjs","sources":["../../../../src/legacy/components/Table/Th.tsx"],"sourcesContent":["import { CSSProperties, ReactElement, ReactNode, cloneElement } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport { FixedCellType, type TdSizeType } from './Td';\nimport { Checkbox, type CheckboxProps } from '../Checkbox';\nimport { B4, B6, type Text } from '../Text';\n\ntype WidthRecord = Record<TdSizeType, string>;\nexport const FIXED_TH_WIDTH: Record<FixedCellType, WidthRecord> = {\n  [FixedCellType.KEBAB]: {\n    l: '48px',\n    m: '46px',\n    s: '44px',\n    xs: '44px',\n  },\n  [FixedCellType.RADIO]: {\n    l: '46px',\n    m: '46px',\n    s: '46px',\n    xs: '46px',\n  },\n  [FixedCellType.CHECKBOX]: {\n    l: '46px',\n    m: '46px',\n    s: '46px',\n    xs: '46px',\n  },\n  [FixedCellType.IMAGE]: {\n    l: '66px',\n    m: '56px',\n    s: '50px',\n    xs: '40px',\n  },\n};\n\nexport type ThSizeType = 'l' | 'm' | 's';\nexport type TableThStyleType = {\n  [key in ThSizeType]: {\n    height: number;\n    iconSize: number;\n    textComponent: typeof Text;\n  };\n};\n\nexport const TABLE_TH_STYLE: TableThStyleType = {\n  l: {\n    height: 46,\n    iconSize: 20,\n    textComponent: B4,\n  },\n  m: {\n    height: 40,\n    iconSize: 18,\n    textComponent: B4,\n  },\n  s: {\n    height: 32,\n    iconSize: 16,\n    textComponent: B6,\n  },\n};\n\nexport interface DefaultThProps {\n  text: string;\n  icon?: ReactNode;\n  width?: string;\n  size: ThSizeType;\n  borderLeft?: CSSProperties['borderLeft'];\n  borderRight?: CSSProperties['borderRight'];\n  background?: CSSProperties['background'];\n}\n\nexport const DefaultTh = ({ text, icon, size, width = 'auto', ...props }: DefaultThProps) => {\n  const thStyle = TABLE_TH_STYLE[size];\n  return (\n    <TableDefaultHeader width={width} height={thStyle.height} {...props}>\n      <ThContents>\n        <thStyle.textComponent>{text}</thStyle.textComponent>\n        {icon &&\n          cloneElement(icon as ReactElement, {\n            size: thStyle.iconSize,\n          })}\n      </ThContents>\n    </TableDefaultHeader>\n  );\n};\n\nexport interface CheckboxThProps {\n  size: ThSizeType;\n  checkboxType: CheckboxProps;\n  borderLeft?: CSSProperties['borderLeft'];\n  borderRight?: CSSProperties['borderRight'];\n  background?: CSSProperties['background'];\n}\n\nexport const CheckboxTh = ({ size, checkboxType, ...props }: CheckboxThProps) => {\n  const thStyle = TABLE_TH_STYLE[size];\n  return (\n    <CheckboxTableHeader\n      {...props}\n      width={FIXED_TH_WIDTH[FixedCellType.CHECKBOX][size]}\n      height={thStyle.height}\n    >\n      <ThContents>\n        <Checkbox {...checkboxType} />\n      </ThContents>\n    </CheckboxTableHeader>\n  );\n};\n\nconst Th = {\n  Default: DefaultTh,\n  Checkbox: CheckboxTh,\n} as const;\n\nexport default Th;\n\nconst ThContents = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 2px;\n`;\n\nconst TableHeader = styled.th<{\n  width: string;\n  height: number;\n  borderLeft?: CSSProperties['borderLeft'];\n  borderRight?: CSSProperties['borderRight'];\n  background?: CSSProperties['background'];\n}>`\n  width: ${({ width }) => width};\n  height: ${({ height }) => height}px;\n  vertical-align: middle;\n  text-wrap: nowrap;\n  border-left: ${({ borderLeft }) => borderLeft ?? 'none'};\n  border-right: ${({ borderRight }) => borderRight ?? 'none'};\n  background: ${({ background }) => background ?? 'inherit'};\n`;\n\nconst TableDefaultHeader = styled(TableHeader)`\n  padding: 5px 14px;\n`;\n\nconst CheckboxTableHeader = styled(TableHeader)`\n  padding: 5px 12px 5px 18px;\n`;\n"],"names":["FIXED_TH_WIDTH","FixedCellType","TABLE_TH_STYLE","B4","B6","DefaultTh","text","icon","size","width","props","thStyle","jsx","TableDefaultHeader","jsxs","ThContents","cloneElement","CheckboxTh","checkboxType","CheckboxTableHeader","Checkbox","Th","styled","TableHeader","height","borderLeft","borderRight","background"],"mappings":";;;;;;AASO,MAAMA,IAAqD;AAAA,EAChE,CAACC,EAAc,KAAK,GAAG;AAAA,IACrB,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,IAAI;AAAA,EACN;AAAA,EACA,CAACA,EAAc,KAAK,GAAG;AAAA,IACrB,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,IAAI;AAAA,EACN;AAAA,EACA,CAACA,EAAc,QAAQ,GAAG;AAAA,IACxB,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,IAAI;AAAA,EACN;AAAA,EACA,CAACA,EAAc,KAAK,GAAG;AAAA,IACrB,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,IAAI;AAAA,EACN;AACF,GAWaC,IAAmC;AAAA,EAC9C,GAAG;AAAA,IACD,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,eAAeC;AAAA,EACjB;AAAA,EACA,GAAG;AAAA,IACD,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,eAAeA;AAAA,EACjB;AAAA,EACA,GAAG;AAAA,IACD,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,eAAeC;AAAA,EACjB;AACF,GAYaC,IAAY,CAAC,EAAE,MAAAC,GAAM,MAAAC,GAAM,MAAAC,GAAM,OAAAC,IAAQ,QAAQ,GAAGC,QAA4B;AACrF,QAAAC,IAAUT,EAAeM,CAAI;AAEjC,SAAA,gBAAAI,EAACC,KAAmB,OAAAJ,GAAc,QAAQE,EAAQ,QAAS,GAAGD,GAC5D,UAAA,gBAAAI,EAACC,GACC,EAAA,UAAA;AAAA,IAAC,gBAAAH,EAAAD,EAAQ,eAAR,EAAuB,UAAKL,EAAA,CAAA;AAAA,IAC5BC,KACCS,EAAaT,GAAsB;AAAA,MACjC,MAAMI,EAAQ;AAAA,IAAA,CACf;AAAA,EAAA,EACL,CAAA,EACF,CAAA;AAEJ,GAUaM,IAAa,CAAC,EAAE,MAAAT,GAAM,cAAAU,GAAc,GAAGR,QAA6B;AACzE,QAAAC,IAAUT,EAAeM,CAAI;AAEjC,SAAA,gBAAAI;AAAA,IAACO;AAAA,IAAA;AAAA,MACE,GAAGT;AAAA,MACJ,OAAOV,EAAeC,EAAc,QAAQ,EAAEO,CAAI;AAAA,MAClD,QAAQG,EAAQ;AAAA,MAEhB,4BAACI,GACC,EAAA,UAAA,gBAAAH,EAACQ,GAAU,EAAA,GAAGF,EAAc,CAAA,GAC9B;AAAA,IAAA;AAAA,EAAA;AAGN,GAEMG,IAAK;AAAA,EACT,SAAShB;AAAA,EACT,UAAUY;AACZ,GAIMF,IAAaO,EAAO;AAAA;AAAA;AAAA;AAAA,GAMpBC,IAAcD,EAAO;AAAA,WAOhB,CAAC,EAAE,OAAAb,EAAM,MAAMA,CAAK;AAAA,YACnB,CAAC,EAAE,QAAAe,EAAO,MAAMA,CAAM;AAAA;AAAA;AAAA,iBAGjB,CAAC,EAAE,YAAAC,QAAiBA,KAAc,MAAM;AAAA,kBACvC,CAAC,EAAE,aAAAC,QAAkBA,KAAe,MAAM;AAAA,gBAC5C,CAAC,EAAE,YAAAC,QAAiBA,KAAc,SAAS;AAAA,GAGrDd,IAAqBS,EAAOC,CAAW;AAAA;AAAA,GAIvCJ,IAAsBG,EAAOC,CAAW;AAAA;AAAA;"}