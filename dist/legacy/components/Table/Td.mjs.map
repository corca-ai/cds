{"version":3,"file":"Td.mjs","sources":["../../../../src/legacy/components/Table/Td.tsx"],"sourcesContent":["import { CSSProperties, ElementType, ReactNode, type PropsWithChildren } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport { B2, B5 } from '../Text';\nimport { color } from '../styles';\n\nexport enum FixedCellType {\n  KEBAB = 'KEBAB_MENU',\n  RADIO = 'RADIO_ITEM',\n  CHECKBOX = 'CHECKBOX',\n  IMAGE = 'IMAGE',\n}\n\nexport type TdSizeType = 'l' | 'm' | 's' | 'xs';\n\nconst TABLE_TD_HEIGHT: Record<TdSizeType, number> = {\n  l: 66,\n  m: 56,\n  s: 50,\n  xs: 40,\n};\n\nconst TABLE_TEXT_TD_STYLE: Record<TdSizeType, { textComponent: ElementType }> = {\n  l: {\n    textComponent: B2,\n  },\n  m: {\n    textComponent: B2,\n  },\n  s: {\n    textComponent: B2,\n  },\n  xs: {\n    textComponent: B5,\n  },\n};\n\nconst TableDefaultTd = styled.td<{\n  width?: number;\n  height: number;\n  borderLeft?: CSSProperties['borderLeft'];\n  borderRight?: CSSProperties['borderRight'];\n  background?: CSSProperties['background'];\n}>`\n  display: table-cell;\n  align-items: center;\n  flex-shrink: 0;\n  width: ${({ width }) => (width ? `${width}px` : 'auto')};\n  height: ${({ height }) => height}px;\n  border-left: ${({ borderLeft }) => borderLeft ?? 'none'};\n  border-right: ${({ borderRight }) => borderRight ?? 'none'};\n  background: ${({ background }) => background ?? 'inherit'};\n`;\n\nexport interface CommonTdProps {\n  size: TdSizeType;\n  borderLeft?: CSSProperties['borderLeft'];\n  borderRight?: CSSProperties['borderRight'];\n  background?: CSSProperties['background'];\n}\n\n/**\n * @description when using ellipsis width is must given\n */\nexport const TextTd = ({\n  width,\n  size,\n  children,\n  ellipsis,\n  ...props\n}: PropsWithChildren<\n  {\n    width?: number;\n    ellipsis?: boolean;\n  } & CommonTdProps\n>) => {\n  const tdStyle = TABLE_TEXT_TD_STYLE[size];\n  return (\n    <TableText ellipsis={ellipsis} width={width} height={TABLE_TD_HEIGHT[size]} {...props}>\n      <tdStyle.textComponent>{children}</tdStyle.textComponent>\n    </TableText>\n  );\n};\n\nconst TableText = styled(TableDefaultTd)<{\n  ellipsis?: boolean;\n}>`\n  padding: 5px 7px 5px 14px;\n  max-height: 66px;\n  vertical-align: middle;\n  border-spacing: 0;\n  ${props =>\n    props.ellipsis &&\n    `max-width: ${props.width ? `${props.width}px` : 'fit-content'};\n    overflow: hidden;\n    text-overflow: ellipsis;\n    word-break: break-all;\n    white-space: nowrap;\n  `}\n  line-height:normal;\n`;\n\nconst TABLE_IMG_TD_SIZE: Record<TdSizeType, number> = {\n  l: 8,\n  m: 7,\n  s: 6,\n  xs: 5,\n};\n\nexport const ImgTd = ({\n  size,\n  src,\n  ...props\n}: {\n  src: string;\n} & CommonTdProps) => {\n  const imgTdSize = TABLE_TD_HEIGHT[size];\n  const imgTdPadding = TABLE_IMG_TD_SIZE[size];\n  return (\n    <TableDataImage size={imgTdSize} padding={imgTdPadding} {...props}>\n      <TableImg src={src} />\n    </TableDataImage>\n  );\n};\n\nconst TableDataImage = styled.td<{\n  size: number;\n  padding: number;\n  borderLeft?: CSSProperties['borderLeft'];\n  borderRight?: CSSProperties['borderRight'];\n  background?: CSSProperties['background'];\n}>`\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  max-width: ${({ size }) => size}px;\n  max-height: ${({ size }) => size}px;\n  padding: ${({ padding }) => padding}px;\n  vertical-align: middle;\n  display: flex;\n  border-left: ${({ borderLeft }) => borderLeft ?? 'none'};\n  border-right: ${({ borderRight }) => borderRight ?? 'none'};\n  background: ${({ background }) => background ?? 'inherit'};\n`;\n\nconst TableImg = styled.img`\n  display: block;\n  box-sizing: border-box;\n  border: none;\n  object-fit: cover;\n  width: 100%;\n  background-size: cover;\n  background-color: ${color['grey-30']};\n  border-radius: 4px;\n`;\n\n/**\n * @description\n * @property {ReactNode} children - use CDS Badge component as children\n */\nexport const BadgeTd = ({\n  size,\n  children,\n  ...props\n}: {\n  children: ReactNode;\n} & CommonTdProps) => {\n  return (\n    <TableBadge height={TABLE_TD_HEIGHT[size]} {...props}>\n      {children}\n    </TableBadge>\n  );\n};\n\nconst TableBadge = styled(TableDefaultTd)`\n  padding: 5px 10px;\n  vertical-align: middle;\n`;\n\ntype SwitchTdDirection = 'left' | 'center';\n\n/**\n * @description\n * @property {ReactNode} children - use CDS Switch component as children\n */\nexport const SwitchTd = ({\n  size,\n  children,\n  direction = 'left',\n  ...props\n}: {\n  children: ReactNode;\n  direction?: SwitchTdDirection;\n} & CommonTdProps) => {\n  return (\n    <TableSwitch height={TABLE_TD_HEIGHT[size]} direction={direction} {...props}>\n      {children}\n    </TableSwitch>\n  );\n};\n\nconst TableSwitch = styled(TableDefaultTd)<{ direction: SwitchTdDirection }>`\n  padding: 5px 14px;\n  text-align: ${({ direction }) => direction};\n  vertical-align: middle;\n`;\n\n/**\n * @description\n * @property {ReactNode} children - use CDS Select component as children\n */\nexport const SelectTd = ({\n  size,\n  children,\n  ...props\n}: {\n  children: ReactNode;\n} & CommonTdProps) => {\n  return (\n    <TableSelect height={TABLE_TD_HEIGHT[size]} {...props}>\n      {children}\n    </TableSelect>\n  );\n};\n\nconst TableSelect = styled(TableDefaultTd)`\n  padding: 5px 10px;\n  vertical-align: middle;\n`;\n\n/**\n * @description\n * @property {ReactNode} children - use CDS Checkbox component as children\n */\nexport const CheckboxTd = ({\n  size,\n  children,\n  ...props\n}: {\n  children: ReactNode;\n} & CommonTdProps) => {\n  return (\n    <TableCheckbox height={TABLE_TD_HEIGHT[size]} {...props}>\n      {children}\n    </TableCheckbox>\n  );\n};\n\nconst TableCheckbox = styled(TableDefaultTd)`\n  padding: 5px 12px 5px 18px;\n  width: 46px;\n  vertical-align: middle;\n`;\n\n/**\n * @description\n * @property {ReactNode} children - use CDS Radio component as children\n */\nexport const RadioTd = ({\n  size,\n  children,\n  ...props\n}: {\n  children: ReactNode;\n} & CommonTdProps) => {\n  return (\n    <TableRadio height={TABLE_TD_HEIGHT[size]} {...props}>\n      {children}\n    </TableRadio>\n  );\n};\n\nconst TableRadio = styled(TableDefaultTd)`\n  padding: 5px 14px 5px 16px;\n  width: 46px;\n  vertical-align: middle;\n`;\n\nconst TABLE_KEBAB_TD_WIDTH: Record<TdSizeType, number> = {\n  l: 48,\n  m: 46,\n  s: 44,\n  xs: 44,\n};\n\n/**\n * @description\n * @property {ReactNode} children - use CDS Kebab component as children\n */\nexport const IconTd = ({\n  size,\n  children,\n  ...props\n}: {\n  children: ReactNode;\n} & CommonTdProps) => {\n  return (\n    <TableIcon\n      valign=\"middle\"\n      height={TABLE_TD_HEIGHT[size]}\n      width={TABLE_KEBAB_TD_WIDTH[size]}\n      {...props}\n    >\n      {children}\n    </TableIcon>\n  );\n};\n\nconst TableIcon = styled(TableDefaultTd)`\n  text-align: center;\n  vertical-align: middle;\n`;\n\nconst Td = {\n  Text: TextTd,\n  Img: ImgTd,\n  Badge: BadgeTd,\n  Switch: SwitchTd,\n  Select: SelectTd,\n  Checkbox: CheckboxTd,\n  Radio: RadioTd,\n  Icon: IconTd,\n};\n\nexport default Td;\n"],"names":["FixedCellType","TABLE_TD_HEIGHT","TABLE_TEXT_TD_STYLE","B2","B5","TableDefaultTd","styled","width","height","borderLeft","borderRight","background","TextTd","size","children","ellipsis","props","tdStyle","jsx","TableText","TABLE_IMG_TD_SIZE","ImgTd","src","imgTdSize","imgTdPadding","TableDataImage","TableImg","padding","color","BadgeTd","TableBadge","SwitchTd","direction","TableSwitch","SelectTd","TableSelect","CheckboxTd","TableCheckbox","RadioTd","TableRadio","TABLE_KEBAB_TD_WIDTH","IconTd","TableIcon","Td","Td$1"],"mappings":"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"}