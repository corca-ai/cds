import c from "./unsupportedIterableToArray.mjs";
function d(e, l) {
  var t = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
  if (!t) {
    if (Array.isArray(e) || (t = c(e)) || l) {
      t && (e = t);
      var o = 0, a = function() {
      };
      return {
        s: a,
        n: function() {
          return o >= e.length ? {
            done: !0
          } : {
            done: !1,
            value: e[o++]
          };
        },
        e: function(n) {
          throw n;
        },
        f: a
      };
    }
    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  var i, u = !0, f = !1;
  return {
    s: function() {
      t = t.call(e);
    },
    n: function() {
      var n = t.next();
      return u = n.done, n;
    },
    e: function(n) {
      f = !0, i = n;
    },
    f: function() {
      try {
        u || t.return == null || t.return();
      } finally {
        if (f)
          throw i;
      }
    }
  };
}
export {
  d as default
};
//# sourceMappingURL=createForOfIteratorHelper.mjs.map
