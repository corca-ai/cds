import * as n from "react";
import * as O from "react-dom";
import P from "../../../../../react-fast-compare@3.2.2/node_modules/react-fast-compare/index.mjs";
import { fromEntries as v, useIsomorphicLayoutEffect as b } from "./utils.mjs";
import { createPopper as U } from "../../../../../@popperjs_core@2.11.8/node_modules/@popperjs/core/lib/popper.mjs";
var g = [], h = function(o, i, r) {
  r === void 0 && (r = {});
  var p = n.useRef(null), e = {
    onFirstUpdate: r.onFirstUpdate,
    placement: r.placement || "bottom",
    strategy: r.strategy || "absolute",
    modifiers: r.modifiers || g
  }, l = n.useState({
    styles: {
      popper: {
        position: e.strategy,
        left: "0",
        top: "0"
      },
      arrow: {
        position: "absolute"
      }
    },
    attributes: {}
  }), m = l[0], S = l[1], d = n.useMemo(function() {
    return {
      name: "updateState",
      enabled: !0,
      phase: "write",
      fn: function(u) {
        var f = u.state, y = Object.keys(f.elements);
        O.flushSync(function() {
          S({
            styles: v(y.map(function(s) {
              return [s, f.styles[s] || {}];
            })),
            attributes: v(y.map(function(s) {
              return [s, f.attributes[s]];
            }))
          });
        });
      },
      requires: ["computeStyles"]
    };
  }, []), c = n.useMemo(function() {
    var a = {
      onFirstUpdate: e.onFirstUpdate,
      placement: e.placement,
      strategy: e.strategy,
      modifiers: [].concat(e.modifiers, [d, {
        name: "applyStyles",
        enabled: !1
      }])
    };
    return P(p.current, a) ? p.current || a : (p.current = a, a);
  }, [e.onFirstUpdate, e.placement, e.strategy, e.modifiers, d]), t = n.useRef();
  return b(function() {
    t.current && t.current.setOptions(c);
  }, [c]), b(function() {
    if (!(o == null || i == null)) {
      var a = r.createPopper || U, u = a(o, i, c);
      return t.current = u, function() {
        u.destroy(), t.current = null;
      };
    }
  }, [o, i, r.createPopper]), {
    state: t.current ? t.current.state : null,
    styles: m.styles,
    attributes: m.attributes,
    update: t.current ? t.current.update : null,
    forceUpdate: t.current ? t.current.forceUpdate : null
  };
};
export {
  h as usePopper
};
//# sourceMappingURL=usePopper.mjs.map
