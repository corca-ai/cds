{"version":3,"file":"usePopper.mjs","sources":["../../../../../../../../node_modules/.pnpm/react-popper@2.3.0_@popperjs+core@2.11.8_react-dom@18.2.0_react@18.2.0/node_modules/react-popper/lib/esm/usePopper.js"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { createPopper as defaultCreatePopper } from '@popperjs/core';\nimport isEqual from 'react-fast-compare';\nimport { fromEntries, useIsomorphicLayoutEffect } from './utils';\nvar EMPTY_MODIFIERS = [];\nexport var usePopper = function usePopper(referenceElement, popperElement, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var prevOptions = React.useRef(null);\n  var optionsWithDefaults = {\n    onFirstUpdate: options.onFirstUpdate,\n    placement: options.placement || 'bottom',\n    strategy: options.strategy || 'absolute',\n    modifiers: options.modifiers || EMPTY_MODIFIERS\n  };\n\n  var _React$useState = React.useState({\n    styles: {\n      popper: {\n        position: optionsWithDefaults.strategy,\n        left: '0',\n        top: '0'\n      },\n      arrow: {\n        position: 'absolute'\n      }\n    },\n    attributes: {}\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var updateStateModifier = React.useMemo(function () {\n    return {\n      name: 'updateState',\n      enabled: true,\n      phase: 'write',\n      fn: function fn(_ref) {\n        var state = _ref.state;\n        var elements = Object.keys(state.elements);\n        ReactDOM.flushSync(function () {\n          setState({\n            styles: fromEntries(elements.map(function (element) {\n              return [element, state.styles[element] || {}];\n            })),\n            attributes: fromEntries(elements.map(function (element) {\n              return [element, state.attributes[element]];\n            }))\n          });\n        });\n      },\n      requires: ['computeStyles']\n    };\n  }, []);\n  var popperOptions = React.useMemo(function () {\n    var newOptions = {\n      onFirstUpdate: optionsWithDefaults.onFirstUpdate,\n      placement: optionsWithDefaults.placement,\n      strategy: optionsWithDefaults.strategy,\n      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {\n        name: 'applyStyles',\n        enabled: false\n      }])\n    };\n\n    if (isEqual(prevOptions.current, newOptions)) {\n      return prevOptions.current || newOptions;\n    } else {\n      prevOptions.current = newOptions;\n      return newOptions;\n    }\n  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);\n  var popperInstanceRef = React.useRef();\n  useIsomorphicLayoutEffect(function () {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.setOptions(popperOptions);\n    }\n  }, [popperOptions]);\n  useIsomorphicLayoutEffect(function () {\n    if (referenceElement == null || popperElement == null) {\n      return;\n    }\n\n    var createPopper = options.createPopper || defaultCreatePopper;\n    var popperInstance = createPopper(referenceElement, popperElement, popperOptions);\n    popperInstanceRef.current = popperInstance;\n    return function () {\n      popperInstance.destroy();\n      popperInstanceRef.current = null;\n    };\n  }, [referenceElement, popperElement, options.createPopper]);\n  return {\n    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,\n    styles: state.styles,\n    attributes: state.attributes,\n    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,\n    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null\n  };\n};"],"names":["EMPTY_MODIFIERS","usePopper","referenceElement","popperElement","options","prevOptions","React","optionsWithDefaults","_React$useState","state","setState","updateStateModifier","_ref","elements","ReactDOM","fromEntries","element","popperOptions","newOptions","isEqual","popperInstanceRef","useIsomorphicLayoutEffect","createPopper","defaultCreatePopper","popperInstance"],"mappings":"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","x_google_ignoreList":[0]}