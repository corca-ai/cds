import * as n from "react";
import c from "../../../../../warning@4.0.3/node_modules/warning/warning.mjs";
import { ManagerReferenceNodeSetterContext as i } from "./Manager.mjs";
import { setRef as f, safeInvoke as s, unwrapArray as l } from "./utils.mjs";
function R(o) {
  var a = o.children, r = o.innerRef, e = n.useContext(i), u = n.useCallback(function(t) {
    f(r, t), s(e, t);
  }, [r, e]);
  return n.useEffect(function() {
    return function() {
      return f(r, null);
    };
  }, []), n.useEffect(function() {
    c(!!e, "`Reference` should not be used outside of a `Manager` component.");
  }, [e]), l(a)({
    ref: u
  });
}
export {
  R as Reference
};
//# sourceMappingURL=Reference.mjs.map
