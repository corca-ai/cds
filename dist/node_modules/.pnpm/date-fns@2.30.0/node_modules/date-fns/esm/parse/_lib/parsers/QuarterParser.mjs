import f from "../../../../../../../@babel_runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/classCallCheck.mjs";
import c from "../../../../../../../@babel_runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/createClass.mjs";
import n from "../../../../../../../@babel_runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.mjs";
import m from "../../../../../../../@babel_runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/inherits.mjs";
import p from "../../../../../../../@babel_runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/createSuper.mjs";
import s from "../../../../../../../@babel_runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.mjs";
import { Parser as Q } from "../Parser.mjs";
import { parseNDigits as l } from "../utils.mjs";
var C = /* @__PURE__ */ function(u) {
  m(o, u);
  var i = p(o);
  function o() {
    var a;
    f(this, o);
    for (var r = arguments.length, e = new Array(r), t = 0; t < r; t++)
      e[t] = arguments[t];
    return a = i.call.apply(i, [this].concat(e)), s(n(a), "priority", 120), s(n(a), "incompatibleTokens", ["Y", "R", "q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]), a;
  }
  return c(o, [{
    key: "parse",
    value: function(r, e, t) {
      switch (e) {
        case "Q":
        case "QQ":
          return l(e.length, r);
        case "Qo":
          return t.ordinalNumber(r, {
            unit: "quarter"
          });
        case "QQQ":
          return t.quarter(r, {
            width: "abbreviated",
            context: "formatting"
          }) || t.quarter(r, {
            width: "narrow",
            context: "formatting"
          });
        case "QQQQQ":
          return t.quarter(r, {
            width: "narrow",
            context: "formatting"
          });
        case "QQQQ":
        default:
          return t.quarter(r, {
            width: "wide",
            context: "formatting"
          }) || t.quarter(r, {
            width: "abbreviated",
            context: "formatting"
          }) || t.quarter(r, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "validate",
    value: function(r, e) {
      return e >= 1 && e <= 4;
    }
  }, {
    key: "set",
    value: function(r, e, t) {
      return r.setUTCMonth((t - 1) * 3, 1), r.setUTCHours(0, 0, 0, 0), r;
    }
  }]), o;
}(Q);
export {
  C as QuarterParser
};
//# sourceMappingURL=QuarterParser.mjs.map
