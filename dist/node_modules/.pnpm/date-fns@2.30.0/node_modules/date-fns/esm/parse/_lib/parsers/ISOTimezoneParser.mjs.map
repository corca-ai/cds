{"version":3,"file":"ISOTimezoneParser.mjs","sources":["../../../../../../../../../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneParser.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { parseTimezonePattern } from \"../utils.js\"; // Timezone (ISO-8601)\nexport var ISOTimezoneParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISOTimezoneParser, _Parser);\n  var _super = _createSuper(ISOTimezoneParser);\n  function ISOTimezoneParser() {\n    var _this;\n    _classCallCheck(this, ISOTimezoneParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 10);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T', 'X']);\n    return _this;\n  }\n  _createClass(ISOTimezoneParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, dateString);\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, dateString);\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n      return new Date(date.getTime() - value);\n    }\n  }]);\n  return ISOTimezoneParser;\n}(Parser);"],"names":["ISOTimezoneParser","_Parser","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","_key","_defineProperty","_assertThisInitialized","_createClass","dateString","token","parseTimezonePattern","timezonePatterns","date","flags","value","Parser"],"mappings":";;;;;;;;;AASU,IAACA,IAAiC,yBAAUC,GAAS;AAC7D,EAAAC,EAAUF,GAAmBC,CAAO;AACpC,MAAIE,IAASC,EAAaJ,CAAiB;AAC3C,WAASA,IAAoB;AAC3B,QAAIK;AACJ,IAAAC,EAAgB,MAAMN,CAAiB;AACvC,aAASO,IAAO,UAAU,QAAQC,IAAO,IAAI,MAAMD,CAAI,GAAGE,IAAO,GAAGA,IAAOF,GAAME;AAC/E,MAAAD,EAAKC,CAAI,IAAI,UAAUA,CAAI;AAE7B,WAAAJ,IAAQF,EAAO,KAAK,MAAMA,GAAQ,CAAC,IAAI,EAAE,OAAOK,CAAI,CAAC,GACrDE,EAAgBC,EAAuBN,CAAK,GAAG,YAAY,EAAE,GAC7DK,EAAgBC,EAAuBN,CAAK,GAAG,sBAAsB,CAAC,KAAK,KAAK,GAAG,CAAC,GAC7EA;AAAA,EACR;AACD,SAAAO,EAAaZ,GAAmB,CAAC;AAAA,IAC/B,KAAK;AAAA,IACL,OAAO,SAAea,GAAYC,GAAO;AACvC,cAAQA,GAAK;AAAA,QACX,KAAK;AACH,iBAAOC,EAAqBC,EAAiB,sBAAsBH,CAAU;AAAA,QAC/E,KAAK;AACH,iBAAOE,EAAqBC,EAAiB,OAAOH,CAAU;AAAA,QAChE,KAAK;AACH,iBAAOE,EAAqBC,EAAiB,sBAAsBH,CAAU;AAAA,QAC/E,KAAK;AACH,iBAAOE,EAAqBC,EAAiB,yBAAyBH,CAAU;AAAA,QAClF,KAAK;AAAA,QACL;AACE,iBAAOE,EAAqBC,EAAiB,UAAUH,CAAU;AAAA,MACpE;AAAA,IACF;AAAA,EACL,GAAK;AAAA,IACD,KAAK;AAAA,IACL,OAAO,SAAaI,GAAMC,GAAOC,GAAO;AACtC,aAAID,EAAM,iBACDD,IAEF,IAAI,KAAKA,EAAK,QAAS,IAAGE,CAAK;AAAA,IACvC;AAAA,EACF,CAAA,CAAC,GACKnB;AACT,EAAEoB,CAAM;","x_google_ignoreList":[0]}