import f from "../../../../../../../@babel_runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/classCallCheck.mjs";
import m from "../../../../../../../@babel_runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/createClass.mjs";
import n from "../../../../../../../@babel_runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.mjs";
import u from "../../../../../../../@babel_runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/inherits.mjs";
import c from "../../../../../../../@babel_runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/createSuper.mjs";
import s from "../../../../../../../@babel_runtime@7.24.8/node_modules/@babel/runtime/helpers/esm/defineProperty.mjs";
import { Parser as p } from "../Parser.mjs";
import { dayPeriodEnumToHours as B } from "../utils.mjs";
var T = /* @__PURE__ */ function(d) {
  u(o, d);
  var a = c(o);
  function o() {
    var e;
    f(this, o);
    for (var t = arguments.length, i = new Array(t), r = 0; r < t; r++)
      i[r] = arguments[r];
    return e = a.call.apply(a, [this].concat(i)), s(n(e), "priority", 80), s(n(e), "incompatibleTokens", ["a", "b", "t", "T"]), e;
  }
  return m(o, [{
    key: "parse",
    value: function(t, i, r) {
      switch (i) {
        case "B":
        case "BB":
        case "BBB":
          return r.dayPeriod(t, {
            width: "abbreviated",
            context: "formatting"
          }) || r.dayPeriod(t, {
            width: "narrow",
            context: "formatting"
          });
        case "BBBBB":
          return r.dayPeriod(t, {
            width: "narrow",
            context: "formatting"
          });
        case "BBBB":
        default:
          return r.dayPeriod(t, {
            width: "wide",
            context: "formatting"
          }) || r.dayPeriod(t, {
            width: "abbreviated",
            context: "formatting"
          }) || r.dayPeriod(t, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "set",
    value: function(t, i, r) {
      return t.setUTCHours(B(r), 0, 0, 0), t;
    }
  }]), o;
}(p);
export {
  T as DayPeriodParser
};
//# sourceMappingURL=DayPeriodParser.mjs.map
