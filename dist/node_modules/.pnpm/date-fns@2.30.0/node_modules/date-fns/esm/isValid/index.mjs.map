{"version":3,"file":"index.mjs","sources":["../../../../../../../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/isValid/index.js"],"sourcesContent":["import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}"],"names":["isValid","dirtyDate","requiredArgs","isDate","date","toDate"],"mappings":";;;AAkCe,SAASA,EAAQC,GAAW;AAEzC,MADAC,EAAa,GAAG,SAAS,GACrB,CAACC,EAAOF,CAAS,KAAK,OAAOA,KAAc;AAC7C,WAAO;AAET,MAAIG,IAAOC,EAAOJ,CAAS;AAC3B,SAAO,CAAC,MAAM,OAAOG,CAAI,CAAC;AAC5B;","x_google_ignoreList":[0]}