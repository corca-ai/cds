{"version":3,"file":"index.mjs","sources":["../../../../../../../../../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/_lib/format/formatters/index.js"],"sourcesContent":["import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, dirtyDelimiter);\n}\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\nexport default formatters;"],"names":["dayPeriodEnum","formatters","date","token","localize","era","signedYear","year","lightFormatters","options","signedWeekYear","getUTCWeekYear","weekYear","twoDigitYear","addLeadingZeros","isoWeekYear","getUTCISOWeekYear","quarter","month","week","getUTCWeek","isoWeek","getUTCISOWeek","dayOfYear","getUTCDayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","hours","dayPeriodEnumValue","_localize","originalDate","timezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","formatTimezoneShort","timestamp","offset","dirtyDelimiter","sign","absOffset","minutes","delimiter"],"mappings":"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","x_google_ignoreList":[0]}