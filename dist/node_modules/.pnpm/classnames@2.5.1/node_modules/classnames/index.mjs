import { getDefaultExportFromCjs as p } from "../../../../../_virtual/_commonjsHelpers.mjs";
import { __module as i } from "../../../../../_virtual/index.mjs";
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
(function(o) {
  (function() {
    var f = {}.hasOwnProperty;
    function e() {
      for (var t = "", r = 0; r < arguments.length; r++) {
        var n = arguments[r];
        n && (t = s(t, u(n)));
      }
      return t;
    }
    function u(t) {
      if (typeof t == "string" || typeof t == "number")
        return t;
      if (typeof t != "object")
        return "";
      if (Array.isArray(t))
        return e.apply(null, t);
      if (t.toString !== Object.prototype.toString && !t.toString.toString().includes("[native code]"))
        return t.toString();
      var r = "";
      for (var n in t)
        f.call(t, n) && t[n] && (r = s(r, n));
      return r;
    }
    function s(t, r) {
      return r ? t ? t + " " + r : t + r : t;
    }
    o.exports ? (e.default = e, o.exports = e) : window.classNames = e;
  })();
})(i);
var a = i.exports;
const m = /* @__PURE__ */ p(a);
export {
  m as default
};
//# sourceMappingURL=index.mjs.map
