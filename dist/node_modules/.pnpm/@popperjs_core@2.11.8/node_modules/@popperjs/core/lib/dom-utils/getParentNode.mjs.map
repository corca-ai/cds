{"version":3,"file":"getParentNode.mjs","sources":["../../../../../../../../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getParentNode.js"],"sourcesContent":["import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}"],"names":["getParentNode","element","getNodeName","isShadowRoot","getDocumentElement"],"mappings":";;;AAGe,SAASA,EAAcC,GAAS;AAC7C,SAAIC,EAAYD,CAAO,MAAM,SACpBA;AAAA;AAAA;AAAA;AAAA,IAMPA,EAAQ;AAAA,IACRA,EAAQ;AAAA,KACRE,EAAaF,CAAO,IAAIA,EAAQ,OAAO;AAAA;AAAA,IAEvCG,EAAmBH,CAAO;AAAA;AAG9B;","x_google_ignoreList":[0]}