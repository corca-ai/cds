{"version":3,"file":"getLayoutRect.mjs","sources":["../../../../../../../../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js"],"sourcesContent":["import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}"],"names":["getLayoutRect","element","clientRect","getBoundingClientRect","width","height"],"mappings":";AAGe,SAASA,EAAcC,GAAS;AAC7C,MAAIC,IAAaC,EAAsBF,CAAO,GAG1CG,IAAQH,EAAQ,aAChBI,IAASJ,EAAQ;AAErB,SAAI,KAAK,IAAIC,EAAW,QAAQE,CAAK,KAAK,MACxCA,IAAQF,EAAW,QAGjB,KAAK,IAAIA,EAAW,SAASG,CAAM,KAAK,MAC1CA,IAASH,EAAW,SAGf;AAAA,IACL,GAAGD,EAAQ;AAAA,IACX,GAAGA,EAAQ;AAAA,IACX,OAAOG;AAAA,IACP,QAAQC;AAAA,EACZ;AACA;","x_google_ignoreList":[0]}