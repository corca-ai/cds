{"version":3,"file":"getCompositeRect.mjs","sources":["../../../../../../../../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js"],"sourcesContent":["import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport { round } from \"../utils/math.js\";\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}"],"names":["isElementScaled","element","rect","scaleX","round","scaleY","getCompositeRect","elementOrVirtualElement","offsetParent","isFixed","isOffsetParentAnElement","isHTMLElement","offsetParentIsScaled","documentElement","getDocumentElement","getBoundingClientRect","scroll","offsets","getNodeName","isScrollParent","getNodeScroll","getWindowScrollBarX"],"mappings":";;;;;;;;AASA,SAASA,EAAgBC,GAAS;AAChC,MAAIC,IAAOD,EAAQ,yBACfE,IAASC,EAAMF,EAAK,KAAK,IAAID,EAAQ,eAAe,GACpDI,IAASD,EAAMF,EAAK,MAAM,IAAID,EAAQ,gBAAgB;AAC1D,SAAOE,MAAW,KAAKE,MAAW;AACpC;AAIe,SAASC,EAAiBC,GAAyBC,GAAcC,GAAS;AACvF,EAAIA,MAAY,WACdA,IAAU;AAGZ,MAAIC,IAA0BC,EAAcH,CAAY,GACpDI,IAAuBD,EAAcH,CAAY,KAAKR,EAAgBQ,CAAY,GAClFK,IAAkBC,EAAmBN,CAAY,GACjDN,IAAOa,EAAsBR,GAAyBK,GAAsBH,CAAO,GACnFO,IAAS;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,EACf,GACMC,IAAU;AAAA,IACZ,GAAG;AAAA,IACH,GAAG;AAAA,EACP;AAEE,UAAIP,KAA2B,CAACA,KAA2B,CAACD,QACtDS,EAAYV,CAAY,MAAM;AAAA,EAClCW,EAAeN,CAAe,OAC5BG,IAASI,EAAcZ,CAAY,IAGjCG,EAAcH,CAAY,KAC5BS,IAAUF,EAAsBP,GAAc,EAAI,GAClDS,EAAQ,KAAKT,EAAa,YAC1BS,EAAQ,KAAKT,EAAa,aACjBK,MACTI,EAAQ,IAAII,EAAoBR,CAAe,KAI5C;AAAA,IACL,GAAGX,EAAK,OAAOc,EAAO,aAAaC,EAAQ;AAAA,IAC3C,GAAGf,EAAK,MAAMc,EAAO,YAAYC,EAAQ;AAAA,IACzC,OAAOf,EAAK;AAAA,IACZ,QAAQA,EAAK;AAAA,EACjB;AACA;","x_google_ignoreList":[0]}