{"version":3,"file":"computeAutoPlacement.mjs","sources":["../../../../../../../../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js"],"sourcesContent":["import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}"],"names":["computeAutoPlacement","state","options","_options","placement","boundary","rootBoundary","padding","flipVariations","_options$allowedAutoP","allowedAutoPlacements","allPlacements","variation","getVariation","placements","variationPlacements","basePlacements","allowedPlacements","overflows","acc","detectOverflow","getBasePlacement","a","b"],"mappings":";;;;AAIe,SAASA,EAAqBC,GAAOC,GAAS;AAC3D,EAAIA,MAAY,WACdA,IAAU,CAAA;AAGZ,MAAIC,IAAWD,GACXE,IAAYD,EAAS,WACrBE,IAAWF,EAAS,UACpBG,IAAeH,EAAS,cACxBI,IAAUJ,EAAS,SACnBK,IAAiBL,EAAS,gBAC1BM,IAAwBN,EAAS,uBACjCO,IAAwBD,MAA0B,SAASE,IAAgBF,GAC3EG,IAAYC,EAAaT,CAAS,GAClCU,IAAaF,IAAYJ,IAAiBO,IAAsBA,EAAoB,OAAO,SAAUX,GAAW;AAClH,WAAOS,EAAaT,CAAS,MAAMQ;AAAA,EACpC,CAAA,IAAII,GACDC,IAAoBH,EAAW,OAAO,SAAUV,GAAW;AAC7D,WAAOM,EAAsB,QAAQN,CAAS,KAAK;AAAA,EACvD,CAAG;AAED,EAAIa,EAAkB,WAAW,MAC/BA,IAAoBH;AAItB,MAAII,IAAYD,EAAkB,OAAO,SAAUE,GAAKf,GAAW;AACjE,WAAAe,EAAIf,CAAS,IAAIgB,EAAenB,GAAO;AAAA,MACrC,WAAWG;AAAA,MACX,UAAUC;AAAA,MACV,cAAcC;AAAA,MACd,SAASC;AAAA,IACf,CAAK,EAAEc,EAAiBjB,CAAS,CAAC,GACvBe;AAAA,EACR,GAAE,CAAE,CAAA;AACL,SAAO,OAAO,KAAKD,CAAS,EAAE,KAAK,SAAUI,GAAGC,GAAG;AACjD,WAAOL,EAAUI,CAAC,IAAIJ,EAAUK,CAAC;AAAA,EACrC,CAAG;AACH;","x_google_ignoreList":[0]}