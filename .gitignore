# See http://help.github.com/ignore-files/ for more about ignoring files.

# compiled output
dist
tmp
/out-tsc

# dependencies
node_modules

# IDEs and editors
/.idea
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace

# IDE - VSCode
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# misc
/.sass-cache
/connect.lock
/coverage
/libpeerconnection.log
npm-debug.log
yarn-error.log
testem.log
/typings

# System Files
.DS_Store
Thumbs.db

# Next.js
.next

# env
.env

# Python
.venv/
__pycache__/
.pytest_cache
.coverage

# keys
*.pem

# swagger
/swagger-spec.json

#pulumi
/Pulumi.dev.yaml
openapi/**/*.json

*.log
*.pid

# sentry
.sentryclirc

.vercel

# preprocessor
topics/
preprocessed/
*.csv
*.parquet
*.tar.gz
*.xls

# trainer
download/
checkpoint/
wandb/

# compiled files and executables in rust
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# closet project
/images/
/input_data/
/clothe-detector/
/object-detector/

# db
.metals/

# llama_index
/indices/
/test/
indices/

# closet test
*.xlsx
/output.json

# messenger experiment
prompt_test/

# openapi
.openapi-generator/

# messenger flower db
flower.db

# airflow
packages/airflow/logs

# data
data/

# offline histories
offline-histories/

# personal
local/